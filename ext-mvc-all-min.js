Ext.namespace("Ext.ux.MVC");Ext.ux.MVC={version:"0.4",createNamespaces:function(C,A){Ext.namespace(C,C+".controllers",C+".models",C+".views",C+".helpers");for(var B=A.length-1;B>=0;B--){Ext.namespace(C+".views."+A[B])}},behaveLikeRails:function(){params=Ext.ux.MVC.params;flash=Ext.ux.MVC.Flash.flash}};Ext.namespace("Ext.ux.MVC.controller","Ext.ux.MVC.model","Ext.ux.MVC.view","Ext.ux.MVC.helper","Ext.ux.MVC.Plugin","Ext.ux.MVC.LayoutManager");Ext.namespace("Ext.ux.MVC.helper.button","Ext.ux.MVC.helper.grid","Ext.ux.MVC.helper.form");Ext.namespace("Ext.ux.App","Ext.ux.App.view");function Application(config){var config=config||{};this.controllers=[];if(config.namespace){config.namespace_var=eval(config.namespace);for(c in config.namespace_var.controllers){eval("this.registerController("+config.namespace+".controllers."+c+", '"+c+"');")}}if(config.router){this.dispatcher=new Ext.ux.MVC.Dispatcher({router:config.router,application:this});Ext.History.init();Ext.History.on("change",function(token){if(token){this.dispatcher.dispatch(token)}else{}},this)}this.requestExceptionHandler=new Ext.ux.MVC.RequestExceptionHandler();this.layoutManager=new Ext.ux.MVC.LayoutManager.LeftMenuLayoutManager(config.layout);this.layoutManager.initialize()}Application.prototype={getLayoutManager:function(){return this.layoutManager},getRouter:function(){return this.router},setRouter:function(A){this.router=A},registerController:function(A,B){this.controllers[B]=A},getControllerByName:function(A){return new this.controllers[A]},initialize:function(A){var A=A||{};if(window.location.hash){url=window.location.hash.replace(/#/,"");this.dispatcher.dispatch(url)}else{if(A.defaultView){Ext.History.add(A.defaultView)}else{throw new Error('Couldn\'t find any view to display when initializing the application.  Call application.initialize({defaultView: "dashboard/Index"}) or similar to show a default view)')}}}};Ext.override(Array,{first:function(){return this[0]},last:function(){return this[this.length-1]},each:function(A,C){var C=C||this;for(var B=0;B<this.length;B++){A.call(C,this[B])}},all:function(A){for(var B=0;B<this.length;B++){if(A.call(this,this[B])!==true){return false}}return true},any:function(A){for(var B=0;B<this.length;B++){if(A.call(this,this[B])===true){return true}}return false},detect:function(B){for(var A=0;A<this.length;A++){if(typeof(B)=="function"){if(B.call(this,this[A])===true){return this[A]}}else{if(B==this[A]){return this[A]}}}return null},select:function(B){var A=[];for(var C=0;C<this.length;C++){if(B.call(this,this[C])===true){A.push(this[C])}}return A},reject:function(B){var A=[];for(var C=0;C<this.length;C++){if(B.call(this,this[C])!==true){A.push(this[C])}}return A},collect:function(B){var A=[];for(var C=0;C<this.length;C++){A.push(B.call(this,this[C]))}return A},max:function(){return Math.max.apply({},this)},min:function(){return Math.min.apply({},this)},sum:function(){for(var A=0,B=0;A<this.length;B+=this[A++]){}return B},toSentence:function(A,F){var A=A||"and";var F=F||false;var D=[];for(var C=0;C<this.length-1;C++){D.push(this[C])}var B=this.last();var E=D.join(", ");if(F){E+=","}return E+" "+A+" "+B}});Ext.ux.ChangeLog=function(A){var A=A||{};this.items={};Ext.applyIf(A,{});Ext.ux.ChangeLog.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.ChangeLog,Ext.util.Observable,{sinceDate:function(A){var A=A||new Date();return this.items.all},addItem:function(A,B){this.items.push({date:B})}});Ext.ux.MVC.Dispatcher=function(A){var A=A||{};this.dispatch=function(B){Ext.ux.MVC.params=A.router.recognise(B);var C=Ext.ux.MVC.params;var D=this.getControllerByName((C[":controller"])+"Controller");D.doAction(C[":action"],C)};this.redirectTo=function(B){if(typeof(B)=="string"){Ext.History.add(B);return}else{}};this.getControllerByName=function(B){return new A.application.controllers[B]}};Ext.ux.MVC.params={};Ext.ux.MVC.Flash={flashContainer:null,flashDisplayTime:1,flash:function(C,D,B){var B=B||{};if(!Ext.ux.MVC.Flash.flashContainer){Ext.ux.MVC.Flash.flashContainer=Ext.DomHelper.insertFirst(document.body,{id:"msg-div"},true)}Ext.ux.MVC.Flash.flashContainer.alignTo(document,"t-t");var A=Ext.DomHelper.append(Ext.ux.MVC.Flash.flashContainer,{html:Ext.ux.MVC.Flash._createBox(D,C,B)},true);A.slideIn("t").pause(Ext.ux.MVC.Flash.flashDisplayTime).ghost("t",{remove:true})},notice:function(A,B){Ext.ux.MVC.Flash.flash(A,B,{cls:"notice"})},error:function(A,B){Ext.ux.MVC.Flash.flash(A,B,{cls:"error"})},_createBox:function(D,B,A){var A=A||{};var C="msg";if(A.cls){C+=" "+A.cls}return['<div class="'+C+'">','<div class="x-box-tl"><div class="x-box-tr"><div class="x-box-tc"></div></div></div>','<div class="x-box-ml"><div class="x-box-mr"><div class="x-box-mc"><h3>',D,"</h3>",B,"</div></div></div>",'<div class="x-box-bl"><div class="x-box-br"><div class="x-box-bc"></div></div></div>',"</div>"].join("")}};Ext.ux.MVC.helper.grid.SearchFilter=function(A){var A=A||{};Ext.applyIf(A,{mode:"remote",triggerAction:"all",pageSize:1000,width:220});Ext.ux.MVC.helper.grid.SearchFilter.superclass.constructor.call(this,A);this.on("beforeselect",function(E,B,D){if(this.gridStore){var C=B.data.id;var F={start:0,limit:15};this.gridStore.baseParams=this.gridStore.baseParams||{};this.gridStore.baseParams[this.paramName]=C;this.gridStore.reload({params:F})}})};Ext.extend(Ext.ux.MVC.helper.grid.SearchFilter,Ext.form.ComboBox);Ext.reg("grid_search_filter",Ext.ux.MVC.helper.grid.SearchFilter);var ImageAssociationRecord=Ext.data.Record.create([{name:"id",type:"int"},{name:"image_id",type:"int"},{name:"image_linked_model_id",type:"int"},{name:"image_linked_model_type",type:"string"},{name:"created_at",type:"string"},{name:"updated_at",type:"string"},{name:"thumb_filename",type:"string",mapping:"image.thumb_filename"},{name:"title",type:"string",mapping:"image.title"},{name:"filename",type:"string",mapping:"image.filename"},{name:"image"}]);var ImageAssociationReader=new Ext.data.JsonReader({root:"image_associations",totalProperty:"results"},ImageAssociationRecord);var ImageAssociator=function(A){config={};Ext.apply(config,A,{baseUrl:"/admin/image_associations",height:300,anchor:"95%",autoLoad:true});readAssociationsUrl=config.baseUrl+"?type="+config.model.class_name+"&id="+config.id;imageAssociationStore=new Ext.data.Store({url:readAssociationsUrl,reader:ImageAssociationReader});this.store=imageAssociationStore;if(config.autoLoad){this.store.load()}tpl=new Ext.XTemplate('<tpl for=".">','<div class="thumb-wrap" id="{id}">','<div class="thumb"><img src="{thumb_filename}" title="{title}"></div>','<span class="x-editable">{filename}</span></div>',"</tpl>",'<div class="x-clear"></div>');addButton=new Ext.Toolbar.Button({text:"Add an Image",iconCls:"add",handler:function(){imageChooser=new ImageChooser(A.image_chooser_options);imageChooser.show("noid",B);function B(C){image_id=C.id;param_string="&image_association[image_id]="+image_id;param_string+="&image_association[image_linked_model_type]="+config.model.class_name;param_string+="&image_association[image_linked_model_id]="+config.id;Ext.Ajax.request({url:config.baseUrl+".ext_json",method:"post",params:param_string,success:function(){imageAssociationStore.reload()}})}}});removeButton=new Ext.Toolbar.Button({text:"Remove Selected",disabled:true,iconCls:"cancel",handler:function(){association_id=dataView.getSelectedRecords()[0].data.id;Ext.Ajax.request({url:config.baseUrl+"/"+association_id+".ext_json",method:"post",params:"_method=delete",success:function(){imageAssociationStore.reload()}})}});toolbar=new Ext.Toolbar({title:"Images attached to this "+config.model.human_name,items:[addButton,"-",removeButton]});dataView=new Ext.DataView({store:imageAssociationStore,tpl:tpl,autoScroll:true,itemSelector:"div.thumb-wrap",emptyText:"No images have been attached yet",singleSelect:true});this.dataView=dataView;this.dataView.on("selectionchange",function(B,C){if(C.length>0){removeButton.enable()}else{removeButton.disable()}});this.panel=new Ext.Panel({tbar:toolbar,height:config.height,title:"Images attached to this "+config.model.human_singular_name,anchor:config.anchor,bodyStyle:"background-color: #fff; border: 1px solid #99BBE8; padding: 7px; overflow:auto;",style:config.style,items:[this.dataView]})};ImageAssociator.prototype={reloadStore:function(A){config.id=A;this.store.proxy.conn.url=config.baseUrl+"?type="+config.model.class_name+"&id="+config.id;this.store.load()}};var ImageChooser=function(C){Ext.apply(this,C,{width:780,height:520,url:"/admin/images.ext_json"});uploadImageForm=new Ext.FormPanel({labelAlign:"left",url:"/admin/images",title:"New File",iconCls:"file_new",layout:"form",closable:true,fileUpload:true,waitMsgTarget:true,items:[{xtype:"textfield",inputType:"file",fieldLabel:"File",name:"image[uploaded_data]",id:"uploaded_data"},{xtype:"textfield",fieldLabel:"Title",name:"image[title]",id:"title"},{xtype:"textarea",fieldLabel:"Description",name:"image[description]",id:"description",width:310,height:150}]});uploadImageForm.addButton({text:"Save",handler:function(){uploadImageForm.form.submit({url:"/admin/images.ext_json",waitMsg:"Saving Data...",failure:function(){Ext.Msg.alert("Operation Failed","There were errors saving this File, please see any fields with red icons")},success:function(G,H){F.hide();Ext.Msg.alert("File Saved","The File has been successfully uploaded");A.reload()}})}});var F=new Ext.Window({title:"Choose a new image to upload",closable:true,closeAction:"hide",modal:true,height:400,width:500,layout:"fit",items:[uploadImageForm]});this.uploadWin=F;this.infoPanel=new Ext.Panel({region:"east",width:150,maxWidth:250});this.detailsTemplate=new Ext.Template('<div class="details"><img src="{thumb_filename}"><div class="details-info">',"<dl>","<dt>Title:</dt>","<dd>{title}</dd>","<dt>Description:</dt>","<dd>{descString}</dd>","<dt>Filename:</dt>","<dd>{shortName}</dd>","<dt>Size:</dt>","<dd>{sizeString}</dd>","</dl>");this.detailsTemplate.compile();var A=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:this.url,method:"get",params:{start:0,limit:15}}),reader:Image.getReader()});A.load=function(H){H=H||{};if(this.fireEvent("beforeload",this,H)!==false){this.storeOptions(H);var I=Ext.apply(H.params||{},this.baseParams);if(this.sortInfo&&this.remoteSort){var G=this.paramNames;I[G.sort]=this.sortInfo.field;I[G.dir]=this.sortInfo.direction}this.proxy.conn.url=this.proxy.conn.url.split("?")[0]+"?"+Ext.urlEncode(I);this.proxy.load(I,this.reader,this.loadRecords,this,H);return true}else{return false}};A.load({params:{start:0,limit:15}});this.store=A;var B=new Ext.XTemplate('<tpl for=".">','<div class="thumb-wrap" id="{id}">','<div class="thumb"><img src="{thumb_filename}" title="{title}"></div>','<span class="x-editable">{shortName}</span></div>',"</tpl>",'<div class="x-clear"></div>');this.view=new Ext.DataView({store:A,tpl:B,autoHeight:true,multiSelect:false,singleSelect:true,overClass:"x-view-over",itemSelector:"div.thumb-wrap",emptyText:"No images to display"});this.view.on("selectionchange",this.showDetails,this,{buffer:100});this.view.on("dblclick",this.doCallback,this);this.view.on("loadexception",this.onLoadException,this);newImageButton=new Ext.Toolbar.Button({text:"Upload a new image",iconCls:"file_new"});newImageButton.on("click",function(){F.show()});this.viewTopToolbar=new Ext.Toolbar({items:["Search by Title: "," ",new Ext.app.SearchField({store:this.store,width:220}),"-",newImageButton]});this.viewBottomToolbar=new Ext.PagingToolbar({pageSize:15,store:this.store,displayInfo:true,displayMsg:"Displaying Images {0} - {1} of {2}",emptyMsg:"No Images to display",items:[new Ext.Toolbar.Fill]});this.imagesPanel=new Ext.Panel({region:"center",cls:"images-view",fitToFrame:true,width:535,layout:"fit",bodyStyle:"overflow: auto;",items:[this.view],bbar:this.viewBottomToolbar,tbar:this.viewTopToolbar});var E=new Ext.Window({title:"Choose an Image",closable:true,closeAction:"hide",autoCreate:true,modal:true,minWidth:400,minHeight:300,syncHeightBeforeShow:true,shadow:true,layout:"border",items:[this.imagesPanel,this.infoPanel]});this.win=E;this.okButton=E.addButton("OK",this.doCallback,this);this.okButton.disable();this.cancelButton=E.addButton("Cancel",function(){E.hide()},E);E.setSize(this.width,this.height);var D={};this.view.prepareData=function(G){G.shortName=Ext.util.Format.ellipsis(G.title,15);G.sizeString=Ext.util.Format.fileSize(G.size);G.dateString=G.created_at;G.descString=G.description||"n/a";D[G.id]=G;return G};this.lookup=D};ImageChooser.prototype={show:function(A,B){this.win.show(A);this.callback=B},reset:function(){this.view.getEl().dom.scrollTop=0;this.view.clearFilter();this.txtFilter.dom.value="";this.view.select(0)},load:function(){if(!this.loaded){this.view.load({url:this.url,params:this.params,callback:this.onLoad.createDelegate(this)})}},onLoadException:function(A,B){this.view.getEl().update('<div style="padding:10px;">Error loading images.</div>')},filter:function(){var A=this.txtFilter.dom.value;this.view.filter("name",A);this.view.select(0)},onLoad:function(){this.loaded=true;this.view.select(0)},sortImages:function(){var A=this.sortSelect.dom.value;this.view.sort(A,A!="name"?"desc":"asc");this.view.select(0)},showDetails:function(A,B){var D=this.view.getSelectedNodes()[0];if(D){this.okButton.enable();var C=this.lookup[D.id];this.infoPanel.getEl().hide();this.detailsTemplate.overwrite(this.infoPanel.getEl(),C);this.infoPanel.getEl().slideIn("l",{stopFx:true,duration:0.2})}else{this.okButton.disable();this.infoPanel.getEl().update("")}},doCallback:function(){var A=this.view.getSelectedNodes()[0];var B=this.callback;this.win.hide();if(A&&B){B(this.lookup[A.id])}}};String.prototype.ellipse=function(A){if(this.length>A){return this.substr(0,A-3)+"..."}return this};ImagePreviewButton=function(A){var A=A||{};Ext.applyIf(A,{text:"Preview Image",iconCls:"play"});Ext.applyIf(A,{handler:function(){var B;if(!B){B=new ImagePreviewWindow(A)}B.show()}});ImagePreviewButton.superclass.constructor.call(this,A)};Ext.extend(ImagePreviewButton,Ext.Button);Ext.reg("image_preview_button",ImagePreviewButton);ImagePreviewWindow=function(A){var A=A||{};var B=this;Ext.applyIf(A,{title:"Preview Image",modal:true,height:400,width:400,items:[new Ext.Panel({autoLoad:A.url})],buttons:[{text:"OK",handler:function(){B.close()}}]});ImagePreviewWindow.superclass.constructor.call(this,A)};Ext.extend(ImagePreviewWindow,Ext.Window);Ext.ux.MVC.Notification=function(A){var A=A||{};var B="<p>"+A.message+"</p>";this.panel=new Ext.Panel({html:B,bodyStyle:"padding: 10px; font-family: verdana; font-size: 12px;"});Ext.applyIf(A,{width:200,height:120,resizable:false,layout:"fit",items:[this.panel],expiry:2000,closable:false});Ext.ux.MVC.Notification.superclass.constructor.call(this,A);this.addEvents({beforeexpire:true,expire:true});if(A.expiry&&A.expiry!=0){this.expireTask=new Ext.util.DelayedTask(this.expire,this);this.on("show",function(){this.expireTask.delay(A.expiry)},this)}};Ext.extend(Ext.ux.MVC.Notification,Ext.Window,{expire:function(){if(this.fireEvent("beforeexpire",this)){this.fireEvent("expire",this);this.close()}}});Ext.reg("notification",Ext.ux.MVC.Notification);Ext.ux.MVC.NotificationManager={windows:[],alignTo:"br",offsets:{br:[-15,-40],bl:[15,-40],tl:[15,15],tr:[-15,15]},setAlignTo:function(A){var B=["tl","tr","bl","br"];if(B.detect(A)){this.alignTo=A}},notify:function(A){var B=new Ext.ux.MVC.Notification(A);B.on("beforeexpire",function(C){return this.removeWindow(C)},this);this.showWindow(B);B.el.alignTo(document,this.alignTo+"-"+this.alignTo,this.offsets[this.alignTo]);this.windows.push({position:1,alignedTo:this.alignTo,win:B,id:B.id});return B},inform:function(B,A){var A=A||{};Ext.applyIf(A,{iconCls:"notification-information",message:B});return this.notify(A)},warn:function(A){var A=A||{};Ext.applyIf(A,{iconCls:"notification-warning"});return this.notify(A)},findAlignedTo:function(A){var A=A||this.alignTo;return this.windows.select(function(B){return B.alignedTo==A})},positionWindow:function(A){A.el.alignTo(document,this.alignTo+"-"+this.alignTo,this.offsets[this.alignTo])},findWindowById:function(A){return this.windows.detect(function(B){return B.id==A})},findWindowByPosition:function(A,B){var B=B||this.alignTo;var C=this.findAlignedTo(B);return C.detect(function(D){return D.position==A})},removeWindow:function(B){var A=this.windows.detect(function(C){return C.id==B.id});if(A){this.windows.remove(A)}A.win.close();return false},showWindow:function(A){A.show()},alignedTopRight:function(){return this.findAlignedTo("tr")},alignedTopLeft:function(){return this.findAlignedTo("tl")},alignedBottomRight:function(){return this.findAlignedTo("br")},alignedBottomLeft:function(){return this.findAlignedTo("bl")},highestTakenPosition:function(B){var B=B||this.alignTo;var C=this.findAlignedTo(B);var A=C.collect(function(D){return D.position}).sort();return A.reverse()[0]},firstAvailablePosition:function(B){var B=B||this.alignTo;var D=this.findAlignedTo(B);if(D.length==0){return 1}var A=D.collect(function(E){return E.position}).sort();for(var C=0;C<A.length;C++){if(!D.detect(function(E){return A[C]+1==E.position})){return A[C]+1}}}};Ext.util.Format.renderThumbnail=function(E,D,A,F,C,B){t=new Ext.Template('<img src="{src}" />');return t.apply({src:E})};Ext.util.Format.datetimeRenderer=function(E,D,A,G,C,B){try{date_splits=E.split(" ")[0].split("/");time_splits=E.split(" ")[1].split(":");year=date_splits[0];month=date_splits[1];day=date_splits[2];hour=time_splits[0];minute=time_splits[1];second=time_splits[2];offset=E.split(" ")[2];return String.format("{0}/{1}/{2} {3}:{4}",day,month,year,hour,minute)}catch(F){return"Unknown"}};Ext.ux.MVC.RequestExceptionHandler=function(B){var B=B||{};Ext.applyIf(B,{showHandlerNotImplementedError:true});var A={};this.handleRequestException=function(D,C,E){if(handler=A[C.status]){handler.call(this,D,C,E)}else{if(B.showHandlerNotImplementedError){Ext.Msg.alert("Handler Not Implemented","Something went wrong and the application couldn't decide what action to take.  Please report this to your developer")}}};this.registerExceptionHandler=function(D,C){A[D]=C};this.getExceptionHandler=function(C){return A[C]};this._handle400=function(D,C,F){var E=this.fetchErrorMessage(C)||"The server could not understand how to process your request.";Ext.Msg.alert("Bad Request",E)};this._handle401=function(D,C,F){var E=this.fetchErrorMessage(C)||"You are not authorised to view that information";Ext.Msg.alert("Unauthorized",E)};this._handle403=function(D,C,F){var E=this.fetchErrorMessage(C)||"You are not authorised to view that information";Ext.Msg.alert("Forbidden",E)};this._handle404=function(D,C,E){Ext.Msg.alert("Item Not Found","The information you were looking for could not be found on the server")};this._handle500=function(D,C,E){Ext.Msg.alert("Server Error","There was an error on the server - your request was not successfully carried out")};this._handle50x=function(D,C,E){Ext.Msg.alert("Server could not be reached","There was a problem trying to contact the server and your request could not be completed.  Please try again in a few moments.")};this.registerExceptionHandler(400,this._handle400);this.registerExceptionHandler(401,this._handle401);this.registerExceptionHandler(403,this._handle403);this.registerExceptionHandler(404,this._handle404);this.registerExceptionHandler(500,this._handle500);this.registerExceptionHandler(502,this._handle50x);this.registerExceptionHandler(503,this._handle50x);this.registerExceptionHandler(504,this._handle50x);Ext.Ajax.on("requestexception",this.handleRequestException,this)};Ext.ux.MVC.RequestExceptionHandler.prototype={fetchErrorMessage:function(A){var B=this.evalResponseText(A);if(B.error){return B.error}else{if(B.errors){if(typeof(B.errors)=="string"){return B.errors}else{return B.errors.join(", ")}}}return null},evalResponseText:function(response){try{return eval("("+response.responseText+")")}catch(e){return{}}}};Ext.ux.MVC.Route=function(B,A){var A=A||{};if(!B){throw new Error("You must supply a mapping string")}this.mappingString=B;Ext.applyIf(A,{});this.options=A;this.paramMatchingRegex=new RegExp(/:([0-9A-Za-z\_]*)/g);this.paramsInMatchString=this.mappingString.match(this.paramMatchingRegex);this.matcherRegex=this.convertToUsableRegex(B)};Ext.ux.MVC.Route.prototype={recognises:function(A){return this.matcherRegex.test(A)},matchesFor:function(B){if(!this.recognises(B)){return false}var E=[];var D=this.paramsInMatchString;var A=B.match(this.matcherRegex);A.shift();for(var C=D.length-1;C>=0;C--){E[D[C]]=A[C]}for(option in this.options){E[option]=this.options[option]}return E},convertToUsableRegex:function(A){var C=this.paramsInMatchString;for(var B=C.length-1;B>=0;B--){A=A.replace(new RegExp(C[B]),"([a-zA-Z0-9_,]+)")}return new RegExp("^"+A+"$")}};Ext.ux.MVC.Router=function(A){var A=A||{};this.mappings=[];this.connect=function(C,D){var B=new Ext.ux.MVC.Route(C,D);this.mappings.push(B)};this.resources=function(B){};this.recognise=function(C){for(var D=0;D<this.mappings.length;D++){var B=this.mappings[D];if(B.recognises(C)){return B.matchesFor(C)}}throw new Error("No route matches url "+C)}};Ext.state.ServerSideProvider=function(A){Ext.state.ServerSideProvider.superclass.constructor.call(this);Ext.apply(this,A,{url:"/state.json"});this.addEvents("staterestore","staterestorefail","clearstatefail","afterclearstate","aftersetstate","setstatefail");this.readStateFromServer()};Ext.extend(Ext.state.ServerSideProvider,Ext.state.Provider,{set:function(A,B){if(typeof B=="undefined"||B===null){this.clear(A);return}this.setServerSideValue(A,B);Ext.state.ServerSideProvider.superclass.set.call(this,A,B)},clear:function(A){Ext.Ajax.request({url:this.url,method:"post",params:"_method=delete&key="+A,scope:this,success:function(){this.fireEvent("afterclearstate")},failure:function(){this.fireEvent("clearstatefail")}});Ext.state.ServerSideProvider.superclass.clear.call(this,A)},readStateFromServer:function(){Ext.Ajax.request({url:this.url,method:"get",scope:this,success:function(A,B){var C=Ext.decode("("+A.responseText+")");boo=C;for(item in C){this.state[item]=this.decodeValue(C[item])}this.fireEvent("staterestore")},failure:function(){this.fireEvent("staterestorefail")}})},setServerSideValue:function(A,B){Ext.Ajax.request({url:this.url,method:"post",params:"key="+A+"&value="+Ext.encode(this.encodeValue(B)),scope:this,success:function(){this.fireEvent("aftersetstate")},failure:function(){this.fireEvent("setstatefail")}})}});Ext.override(String,{capitalize:function(){return this.charAt(0).toUpperCase()+this.substr(1).toLowerCase()},titleize:function(){return this.replace(/\w\S*/g,function(A){return A.charAt(0).toUpperCase()+A.substr(1).toLowerCase()})},camelize:function(){return this.replace(/_/g," ").titleize().replace(/ /g,"")},classify:function(){},truncate:function(B,A){var A=A||"...";var B=parseInt(B)-A.length;if(this.length>B){return this.substring(0,B)+A}else{return this}}});String.capitalize=function(A){return A.charAt(0).toUpperCase()+A.substr(1).toLowerCase()};String.titleize=function(A){return A.replace(/\w\S*/g,function(B){return B.charAt(0).toUpperCase()+B.substr(1).toLowerCase()})};String.camelize=function(A){return String.titleize(A.replace(/_/g," ")).replace(/ /g,"")};VideoChooser=function(D){var D=D||{};Ext.applyIf(D,{title:"Choose a Video",width:780,height:520,closable:true,closeAction:"hide",autoCreate:true,modal:true,minWidth:400,minHeight:300,syncHeightBeforeShow:true,shadow:true,layout:"border",url:"/admin/videos.ext_json"});this.infoPanel=new Ext.Panel({region:"east",width:150,maxWidth:250});this.detailsTemplate=new Ext.Template('<div class="details"><img src="/images/video_preview.gif"><div class="details-info">',"<dl>","<dt>Title:</dt>","<dd>{title}</dd>","<dt>Description:</dt>","<dd>{descString}</dd>","<dt>Filename:</dt>","<dd>{shortName}</dd>","<dt>Size:</dt>","<dd>{sizeString}</dd>","</dl>");this.detailsTemplate.compile();var B=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:D.url,method:"get",params:{start:0,limit:15}}),reader:Video.getReader()});B.load=function(H){H=H||{};this.storeOptions(H);var I=Ext.apply(H.params||{},this.baseParams);if(this.sortInfo&&this.remoteSort){var G=this.paramNames;I[G.sort]=this.sortInfo.field;I[G.dir]=this.sortInfo.direction}this.proxy.conn.url=this.proxy.conn.url.split("?")[0]+"?"+Ext.urlEncode(I);this.proxy.load(I,this.reader,this.loadRecords,this,H);return true};B.load({params:{start:0,limit:15}});this.store=B;var C=new Ext.XTemplate('<tpl for=".">','<div class="video-preview-wrap" id="{id}">','<div class="thumb"><img src="/images/video_preview.gif" title="{title}"></div>',"<span>{title}</span></div>","</tpl>",'<div class="x-clear"></div>');var A=new Ext.DataView({store:B,tpl:C,autoHeight:true,multiSelect:false,singleSelect:true,overClass:"x-view-over",itemSelector:"div.video-preview-wrap",emptyText:"No images to display"});this.view=A;this.viewTopToolbar=new Ext.Toolbar({items:["Search by Title: "," ",new Ext.app.SearchField({store:this.store,width:220})]});this.viewBottomToolbar=new Ext.PagingToolbar({pageSize:15,store:this.store,displayInfo:true,displayMsg:"Displaying Videos {0} - {1} of {2}",emptyMsg:"No Videos to display",items:[new Ext.Toolbar.Fill]});this.videosPanel=new Ext.Panel({region:"center",cls:"images-view",fitToFrame:true,width:535,layout:"fit",bodyStyle:"overflow: auto;",items:[this.view],bbar:this.viewBottomToolbar,tbar:this.viewTopToolbar});var F=this;this.reset=function(){this.view.getEl().dom.scrollTop=0;this.view.clearFilter();this.txtFilter.dom.value="";this.view.select(0)};this.onLoadException=function(G,H){this.view.getEl().update('<div style="padding:10px;">Error loading videos.</div>')};this.filter=function(){var G=this.txtFilter.dom.value;this.view.filter("name",G);this.view.select(0)};this.onLoad=function(){this.loaded=true;this.view.select(0)};this.sortVideos=function(){var G=this.sortSelect.dom.value;this.view.sort(G,G!="name"?"desc":"asc");this.view.select(0)};this.showDetails=function(G,H){var J=this.view.getSelectedNodes()[0];if(J){this.okButton.enable();var I=this.lookup[J.id];this.infoPanel.getEl().hide();this.detailsTemplate.overwrite(this.infoPanel.getEl(),I);this.infoPanel.getEl().slideIn("l",{stopFx:true,duration:0.2})}else{this.okButton.disable();this.infoPanel.getEl().update("")}};this.doCallback=function(){var G=A.getSelectedNodes()[0];var H=D.callback;F.hide();if(G&&H){H(this.lookup[G.id])}};var E={};this.view.prepareData=function(G){G.shortName=Ext.util.Format.ellipsis(G.title,15);G.sizeString=Ext.util.Format.fileSize(G.size);G.dateString=G.created_at;G.descString=G.description||"n/a";E[G.id]=G;return G};this.lookup=E;this.okButton=new Ext.Button({text:"OK",disabled:true});this.cancelButton=new Ext.Button({text:"Cancel",handler:function(){F.close()}});this.view.on("selectionchange",this.showDetails,this,{buffer:100});this.view.on("dblclick",this.doCallback,this);this.view.on("loadexception",this.onLoadException,this);this.okButton.on("click",this.doCallback,this);Ext.applyIf(D,{items:[this.videosPanel,this.infoPanel],buttons:[this.okButton,this.cancelButton]});VideoChooser.superclass.constructor.call(this,D)};Ext.extend(VideoChooser,Ext.Window);String.prototype.ellipse=function(A){if(this.length>A){return this.substr(0,A-3)+"..."}return this};VideoPreviewButton=function(A){var A=A||{};Ext.applyIf(A,{text:"Preview Video",iconCls:"play"});Ext.applyIf(A,{handler:function(){var B;if(!B){B=new VideoPreviewWindow(A)}B.show()}});VideoPreviewButton.superclass.constructor.call(this,A)};Ext.extend(VideoPreviewButton,Ext.Button);Ext.reg("video_preview_button",VideoPreviewButton);VideoPreviewWindow=function(A){var A=A||{};var B=this;Ext.applyIf(A,{title:"Preview Video",modal:true,height:377,width:368,resizable:false,items:[new Ext.Panel({autoLoad:A.url})],buttons:[{text:"OK",handler:function(){B.close()}}]});VideoPreviewWindow.superclass.constructor.call(this,A)};Ext.extend(VideoPreviewWindow,Ext.Window);Ext.app.App=function(A){Ext.apply(this,A);this.addEvents({ready:true,beforeunload:true});Ext.onReady(this.initApp,this)};Ext.extend(Ext.app.App,Ext.util.Observable,{isReady:false,startMenu:null,modules:null,getStartConfig:function(){},initApp:function(){this.startConfig=this.startConfig||this.getStartConfig();this.os=new Ext.OS(this);this.launcher=this.os.taskbar.startMenu;this.modules=this.getModules();if(this.modules){this.initModules(this.modules)}this.init();Ext.EventManager.on(window,"beforeunload",this.onUnload,this);this.fireEvent("ready",this);this.isReady=true},getModules:Ext.emptyFn,init:Ext.emptyFn,initModules:function(C){for(var D=0,B=C.length;D<B;D++){var A=C[D];this.launcher.add(A.launcher);A.app=this}},getModule:function(C){var B=this.modules;for(var D=0,A=B.length;D<A;D++){if(B[D].id==C||B[D].appType==C){return B[D]}}return""},onReady:function(B,A){if(!this.isReady){this.on("ready",B,A)}else{B.call(A,this)}},getOS:function(){return this.os},onUnload:function(A){if(this.fireEvent("beforeunload",this)===false){A.stopEvent()}}});Ext.Desktop=function(A){var A=A||{};this.desktopEl=Ext.get("x-desktop");Ext.applyIf(A,{renderTo:"x-desktop",layout:"desktop",stateful:true,stateId:"desktop-shortcuts",stateEvents:["shortcutmoved","shortcutcreated","shortcutdeleted"],defaults:{xtype:"desktop_shortcut"},getState:function(){var B=[];var C=this.items.items;for(var D=0;D<C.length;D++){var E=C[D];if(parseInt(E.position,10)>0){B.push({text:E.text,position:parseInt(E.position,10),icon:E.icon})}}return{items:B}},applyState:function(C){for(var B=0;B<C.items.length;B++){if(C.items[B].position>0){this.add(C.items[B])}}}});Ext.Desktop.superclass.constructor.call(this,A);this.addEvents({beforeshortcutmoved:true,shortcutmoved:true,beforeshortcutcreated:true,shortcutcreated:true,beforeshortcutdeleted:true,shortcutdeleted:true})};Ext.extend(Ext.Desktop,Ext.Container,{getLayoutTarget:function(){return this.desktopEl},initializeDropZone:function(){var A=this;this.dropZone=new Ext.dd.DropTarget(this.desktopEl,{notifyOver:function(D,C,B){if(this.canDropOnLocation(D,C,B)){return Ext.dd.DropZone.prototype.dropAllowed}else{return Ext.dd.DropZone.prototype.dropNotAllowed}},notifyDrop:function(F,E,D){if(this.canDropOnLocation(F,E,D)&&(target=E.getTarget("td.shortcut-position"))){var C=A.items.filter("id",D.sourceEl.id).items[0];if(C){if(A.fireEvent("beforeshortcutmoved")){C.position=target.id.split("-").last();A.fireEvent("shortcutmoved")}}else{Ext.applyIf(D.shortcutConfig,{position:target.id.split("-").last()});if(A.fireEvent("beforeshortcutcreated",A)){var B=new Ext.ux.Shortcut(D.shortcutConfig);A.items.add(B);A.fireEvent("shortcutcreated",A,B)}}A.doLayout();return true}return false},canDropOnLocation:function(D,C,B){if(C.getTarget(".x-window")){return false}if(C.getTarget(".x-shortcut")){return false}if(C.getTarget("td.shortcut-position")&&this.hasValidShortcutConfig(B)){return true}else{return false}},hasValidShortcutConfig:function(C){var B=C.shortcutConfig;return true}})},initializeDragZone:function(){this.dragZone=new Ext.dd.DragZone(this.desktopEl,{getDragData:function(C){var B=C.getTarget("div.x-shortcut",10);if(B){var A=B.cloneNode(true);A.id=Ext.id();return this.dragData={sourceEl:B,repairXY:Ext.fly(B).getXY(),ddel:A,shortcut:this}}},getRepairXY:function(){return this.dragData.repairXY}})}});Ext.reg("desktop",Ext.Desktop);Ext.ux.DesktopLayout=function(A){var A=A||{};Ext.applyIf(A,{shortcutSize:90,items:[],positions:[],shortcuts:[]});Ext.ux.DesktopLayout.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.DesktopLayout,Ext.layout.ContainerLayout,{monitorResize:true,onLayout:function(A,B){if(!this.desktop){this.desktop=A.desktop}if(!this.table){this.createLayoutTable(B)}this.renderAll(A,B)},onResize:function(){console.log("resized")},createLayoutTable:function(F){this.table=F.createChild({tag:"table",cls:"x-desktop-table",cellspacing:0});this.tbody=this.table.createChild({tag:"tbody"});var A=this.shortcutsWide();var D=this.shortcutsHigh();for(var C=1;C<D+1;C++){var E=this.tbody.createChild({tag:"tr"});for(var B=1;B<A+1;B++){this.positions.push(E.createChild({tag:"td",id:"shortcut-position-"+(C+(D*(B-1))),cls:"shortcut-position",height:this.shortcutSize,width:this.shortcutSize}))}}},renderAll:function(D,E){var B=D.items.items;for(var C=0,A=B.length;C<A;C++){var F=B[C];if(F&&(!F.rendered||!this.isValidParent(F,E))){this.renderItem(F,F.position,E)}}},renderItem:function(B,A){if(B){if(B.rendered){this.findLocationById(A).insertFirst(B.id)}else{B.render(this.findLocationById(A))}}},findLocationById:function(A){return this.positions.detect(function(B){return B.id=="shortcut-position-"+A})},shortcutsHigh:function(){return parseInt(this.desktop.getWinHeight()/this.shortcutSize)},shortcutsWide:function(){return parseInt(this.desktop.getWinWidth()/this.shortcutSize)},addShortcut:function(B){console.log("adding shortcuts");console.log(B);Ext.applyIf(B,{position:this.firstAvailablePosition()});if(!this.shortcutPositionAvailable(B.position)){B.position=this.firstAvailablePosition()}var A=B;this.shortcuts.push(A)},addShortcuts:function(B){for(var A=B.length-1;A>=0;A--){this.addShortcut(B[A])}},removeShortcut:function(B){var A=this.findShortcutById(B)},updateShortcut:function(C,B){var A=this.findShortcutById(C)},firstAvailablePosition:function(C){var C=C||0;var B=this.highestShortcutPosition();for(var A=C;A<B;A++){if(this.shortcutPositionAvailable(A)){return A}}return B+1},shortcutPositionAvailable:function(B){var A=this.shortcuts;for(var C=A.length-1;C>=0;C--){if(A[C].position==B){return false}}return true},highestShortcutPosition:function(){var A=this.shortcuts;var C=0;for(var B=A.length-1;B>=0;B--){var D=A[B].position;if(D>C){C=D}}return C},findShortcutById:function(C){var A=this.shortcuts;for(var B=A.length-1;B>=0;B--){if(A[B].id==C){return A[B]}}return false},findShortcutsBy:function(D,C){var C=C||this;var A=this.shortcuts;var E=[];for(var B=A.length-1;B>=0;B--){if(D.call(C,A[B])===true){E.push(A[B])}}return E}});Ext.reg("desktop_layout",Ext.ux.DesktopLayout);Ext.Container.LAYOUTS.desktop=Ext.ux.DesktopLayout;Ext.app.Module=function(A){Ext.apply(this,A);Ext.app.Module.superclass.constructor.call(this);this.init()};Ext.extend(Ext.app.Module,Ext.util.Observable,{init:Ext.emptyFn});Ext.OS=function(A){var A=A||{};this.taskbar=new Ext.ux.TaskBar(A);var F=this.taskbar;this.desktopEl=Ext.get("x-desktop");var J=this.desktopEl;this.taskbarEl=Ext.get("ux-taskbar");var C=this.taskbarEl;this.shortcuts=[];var H=Ext.WindowMgr;var D;function E(L){L.minimized=true;L.hide()}function I(L){if(D&&D!=L){K(D)}F.setActiveButton(L.taskButton);D=L;Ext.fly(L.taskButton.el).addClass("active-win");L.minimized=false}function K(L){if(L==D){D=null;Ext.fly(L.taskButton.el).removeClass("active-win")}}function B(L){F.removeTaskButton(L.taskButton);G()}function G(){J.setHeight(Ext.lib.Dom.getViewHeight()-C.getHeight())}Ext.EventManager.onWindowResize(G);this.createWindow=function(M,L){var N=new (L||Ext.Window)(Ext.applyIf(M||{},{manager:H,minimizable:true,maximizable:true}));N.render(J);N.taskButton=F.addTaskButton(N);N.cmenu=new Ext.menu.Menu({items:[]});N.animateTarget=N.taskButton.el;N.on({activate:{fn:I},beforeshow:{fn:I},deactivate:{fn:K},minimize:{fn:E},close:{fn:B}});G();return N};this.getManager=function(){return H};this.getWindow=function(L){return H.get(L)};this.desktop=new Ext.Desktop({desktop:this});Ext.OS.superclass.constructor.call(this,A);G()};Ext.extend(Ext.OS,Ext.util.Observable,{getWinHeight:function(){var A=(Ext.lib.Dom.getViewHeight()-this.taskbarEl.getHeight());return A<100?100:A},getWinWidth:function(){var A=Ext.lib.Dom.getViewWidth();return A<200?200:A},getWinX:function(A){return(Ext.lib.Dom.getViewWidth()-A)/2},getWinY:function(A){return(Ext.lib.Dom.getViewHeight()-taskbarEl.getHeight()-A)/2},shortcutsHigh:function(){return parseInt(this.getWinHeight()/this.shortcutSize)},shortcutsWide:function(){return parseInt(this.getWinWidth()/this.shortcutSize)},addShortcut:function(B){Ext.applyIf(B,{position:this.firstAvailablePosition()});if(!this.shortcutPositionAvailable(B.position)){B.position=this.firstAvailablePosition()}var A=B;this.shortcuts.push(A)},firstAvailablePosition:function(C){var C=C||0;var B=this.highestShortcutPosition();for(var A=C;A<B;A++){if(this.shortcutPositionAvailable(A)){return A}}return B+1},shortcutPositionAvailable:function(B){var A=this.shortcuts;for(var C=A.length-1;C>=0;C--){if(A[C].position==B){return false}}return true},highestShortcutPosition:function(){var A=this.shortcuts;var C=0;for(var B=A.length-1;B>=0;B--){var D=A[B].position;if(D>C){C=D}}return C},addShortcuts:function(B){for(var A=B.length-1;A>=0;A--){this.addShortcut(B[A])}},removeShortcut:function(B){var A=this.findShortcutById(B)},updateShortcut:function(C,B){var A=this.findShortcutById(C)},findShortcutById:function(C){var A=this.shortcuts;for(var B=A.length-1;B>=0;B--){if(A[B].id==C){return A[B]}}return false},findShortcutsBy:function(C){var A=this.shortcuts;var D=[];for(var B=A.length-1;B>=0;B--){if(C.call(this,A[B])===true){D.push(A[B])}}return D}});Ext.ux.QuickLaunch=function(A){var A=A||{};Ext.applyIf(A,{renderTo:"ux-taskbar-quick-launch",el:"ux-taskbar-quick-launch",id:"QuickLaunch",stateful:true,stateId:"quick_launch",applyState:function(){console.log("quick launch apply state")},getState:function(){console.log("quick launch get state")}});Ext.ux.QuickLaunch.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.QuickLaunch,Ext.Component,{render:function(){console.log("rendering quick launch");Ext.ux.QuickLaunch.superclass.render.apply(this,arguments);console.log("frak")},onRender:function(){console.log("on render");this.el=new Ext.Element("<p></p>")}});Ext.reg("quick_launch",Ext.ux.QuickLaunch);Ext.ux.Shortcut=function(A){var A=A||{};Ext.applyIf(A,{text:"Some Desktop Shortcut",id:"shortcut-"+A.position});this.config=A;this.id=A.id;Ext.ux.Shortcut.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.Shortcut,Ext.Component,{hoverClass:"x-shortcut-hover",selectedClass:"x-shortcut-selected",template:new Ext.Template("<div></div>"),onRender:function(A){this.el=this.template.append(A,[this.config.text,this.config.icon,this.id],true);this.el.on("mousedown",this.onMouseDown,this);this.el.on("dblclick",this.onDblClick,this);this.el.on("contextmenu",this.onContextMenu,this);this.el.on("mouseover",this.onHover,this);this.el.on("mouseout",this.onHoverOut,this)},onDblClick:function(){Ext.ux.MVC.NotificationManager.inform("Desktop item double clicked")},onHover:function(){this.el.addClass(this.hoverClass)},onHoverOut:function(){this.el.removeClass(this.hoverClass)},onMouseDown:function(A){if(A.button==0){this.select()}},select:function(){Ext.ux.Shortcut.unselectAllShortcuts();this.el.addClass(this.selectedClass)},onContextMenu:Ext.emptyFn,unselect:function(){this.el.removeClass(this.selectedClass)}});Ext.ux.Shortcut.unselectAllShortcuts=function(C){var C=C||"shortcut";var B=new RegExp(C);var A=Ext.ComponentMgr.all.filterBy(function(D){return B.test(D.getXTypes())});A.each(function(D){D.unselect()})};Ext.reg("shortcut",Ext.ux.Shortcut);Ext.ux.DesktopShortcut=function(A){var A=A||{};Ext.applyIf(A,{contextMenuConfig:{items:[{text:"Delete this shortcut",scope:this,iconCls:"delete",handler:function(){Ext.ux.MVC.NotificationManager.inform("Deleting shortcut "+this.id)}}]}});Ext.ux.DesktopShortcut.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.DesktopShortcut,Ext.ux.Shortcut,{template:new Ext.Template('<div class="x-shortcut x-shortcut-desktop" id="{2}">','<div class="x-shortcut-icon"><img src="{1}" /></div>','<span unselectable="on">{0}</span>',"</div>"),onContextMenu:function(A){A.stopEvent();this.select();if(!this.contextMenu){this.contextMenu=new Ext.menu.Menu(this.config.contextMenuConfig)}if(!this.contextMenu.el){this.contextMenu.render()}this.contextMenu.showAt(A.getXY())}});Ext.reg("desktop_shortcut",Ext.ux.DesktopShortcut);Ext.ux.QuickLaunchShortcut=function(A){var A=A||{};Ext.applyIf(A,{});Ext.ux.QuickLaunchShortcut.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.QuickLaunchShortcut,Ext.ux.Shortcut,{template:new Ext.Template('<div class="x-shortcut x-shortcut-quick-launch" id="{2}">','<div class="x-shortcut-icon"><img src="{1}" /></div>',"</div>"),onContextMenu:function(){console.log("context menu appears")}});Ext.reg("quick_launch_shortcut",Ext.ux.QuickLaunchShortcut);Ext.namespace("Ext.ux");Ext.ux.StartMenu=function(A){Ext.ux.StartMenu.superclass.constructor.call(this,A);var B=this.toolItems;this.toolItems=new Ext.util.MixedCollection();if(B){this.addTool.apply(this,B)}};Ext.extend(Ext.ux.StartMenu,Ext.menu.Menu,{render:function(){if(this.el){return}var A=this.el=new Ext.Layer({cls:"x-menu ux-start-menu",shadow:this.shadow,constrain:false,parentEl:this.parentEl||document.body,zindex:15000});var E=A.createChild({tag:"div",cls:"x-window-header x-unselectable x-panel-icon "+this.iconCls});this.header=E;var F=E.createChild({tag:"span",cls:"x-window-header-text"});var O=E.wrap({cls:"ux-start-menu-tl"});var K=E.wrap({cls:"ux-start-menu-tr"});var C=E.wrap({cls:"ux-start-menu-tc"});this.menuBWrap=A.createChild({tag:"div",cls:"x-window-body x-border-layout-ct ux-start-menu-body"});var D=this.menuBWrap.wrap({cls:"ux-start-menu-ml"});var L=this.menuBWrap.wrap({cls:"x-window-mc ux-start-menu-bwrap"});this.menuPanel=this.menuBWrap.createChild({tag:"div",cls:"x-panel x-border-panel ux-start-menu-apps-panel"});this.toolsPanel=this.menuBWrap.createChild({tag:"div",cls:"x-panel x-border-panel ux-start-menu-tools-panel"});var J=D.wrap({cls:"x-window-bwrap"});var I=J.createChild({tag:"div",cls:"ux-start-menu-bc"});var B=I.wrap({cls:"ux-start-menu-bl x-panel-nofooter"});var N=I.wrap({cls:"ux-start-menu-br"});this.keyNav=new Ext.menu.MenuNav(this);if(this.plain){A.addClass("x-menu-plain")}if(this.cls){A.addClass(this.cls)}this.focusEl=A.createChild({tag:"a",cls:"x-menu-focus",href:"#",onclick:"return false;",tabIndex:"-1"});var H=this.menuPanel.createChild({tag:"ul",cls:"x-menu-list"});var M=this.toolsPanel.createChild({tag:"ul",cls:"x-menu-list"});var G={click:{fn:this.onClick,scope:this},mouseover:{fn:this.onMouseOver,scope:this},mouseout:{fn:this.onMouseOut,scope:this}};H.on(G);this.items.each(function(Q){var P=document.createElement("li");P.className="x-menu-list-item";H.dom.appendChild(P);Q.render(P,this)},this);this.ul=H;this.autoWidth();M.on(G);this.toolItems.each(function(Q){var P=document.createElement("li");P.className="x-menu-list-item";M.dom.appendChild(P);Q.render(P,this)},this);this.toolsUl=M;this.autoWidth();this.menuBWrap.setStyle("position","relative");this.menuBWrap.setHeight(this.height);this.menuPanel.setStyle({padding:"2px",position:"absolute",overflow:"auto"});this.toolsPanel.setStyle({padding:"2px 4px 2px 2px",position:"absolute",overflow:"auto"});this.setTitle(this.title)},findTargetItem:function(B){var A=B.getTarget(".x-menu-list-item",this.ul,true);if(A&&A.menuItemId){if(this.items.get(A.menuItemId)){return this.items.get(A.menuItemId)}else{return this.toolItems.get(A.menuItemId)}}},show:function(B,E,A){this.parentMenu=A;if(!this.el){this.render()}this.fireEvent("beforeshow",this);this.showAt(this.el.getAlignToXY(B,E||this.defaultAlign),A,false);var D=100;var C=this.menuBWrap.getBox();this.menuPanel.setWidth(C.width-D);this.menuPanel.setHeight(C.height);this.toolsPanel.setWidth(D);this.toolsPanel.setX(C.x+C.width-D);this.toolsPanel.setHeight(C.height)},addTool:function(){var B=arguments,A=B.length,E;for(var C=0;C<A;C++){var D=B[C];if(D.render){E=this.addToolItem(D)}else{if(typeof D=="string"){if(D=="separator"||D=="-"){E=this.addToolSeparator()}else{E=this.addText(D)}}else{if(D.tagName||D.el){E=this.addElement(D)}else{if(typeof D=="object"){E=this.addToolMenuItem(D)}}}}}return E},addToolSeparator:function(){return this.addToolItem(new Ext.menu.Separator({itemCls:"ux-toolmenu-sep"}))},addToolItem:function(B){this.toolItems.add(B);if(this.ul){var A=document.createElement("li");A.className="x-menu-list-item";this.ul.dom.appendChild(A);B.render(A,this);this.delayAutoWidth()}return B},addToolMenuItem:function(A){if(!(A instanceof Ext.menu.Item)){if(typeof A.checked=="boolean"){A=new Ext.menu.CheckItem(A)}else{A=new Ext.menu.Item(A)}}return this.addToolItem(A)},setTitle:function(B,A){this.title=B;this.header.child("span").update(B);return this}});Ext.ux.TaskBar=function(A){this.app=A;this.init()};Ext.extend(Ext.ux.TaskBar,Ext.util.Observable,{init:function(){this.startMenu=new Ext.ux.StartMenu(Ext.apply({iconCls:"user",height:300,shadow:true,title:"Jack Slocum",width:300},this.app.startConfig));this.startBtn=new Ext.Button({text:"Start",id:"ux-startbutton",iconCls:"start",menu:this.startMenu,menuAlign:"bl-tl",renderTo:"ux-taskbar-start",clickEvent:"mousedown",template:new Ext.Template('<table border="0" cellpadding="0" cellspacing="0" class="x-btn-wrap"><tbody><tr>','<td class="ux-startbutton-left"><i>&#160;</i></td><td class="ux-startbutton-center"><em unselectable="on"><button class="x-btn-text" type="{1}" style="height:30px;">{0}</button></em></td><td class="ux-startbutton-right"><i>&#160;</i></td>',"</tr></tbody></table>")});var C=Ext.get("ux-startbutton").getWidth()+10;var B=new Ext.BoxComponent({el:"ux-taskbar-start",id:"TaskBarStart",split:true,minWidth:C,width:C,region:"west"});this.tbPanel=new Ext.ux.TaskButtonsPanel({el:"ux-taskbuttons-panel",id:"TaskBarButtons",region:"center"});var A=new Ext.ux.TaskBarContainer({el:"ux-taskbar",layout:"border",items:[B,this.tbPanel]});return this},addTaskButton:function(A){return this.tbPanel.addButton(A,"ux-taskbuttons-panel")},removeTaskButton:function(A){this.tbPanel.removeButton(A)},setActiveButton:function(A){this.tbPanel.setActiveButton(A)}});Ext.ux.TaskBarContainer=Ext.extend(Ext.Container,{initComponent:function(){Ext.ux.TaskBarContainer.superclass.initComponent.call(this);this.el=Ext.get(this.el)||Ext.getBody();this.el.setHeight=Ext.emptyFn;this.el.setWidth=Ext.emptyFn;this.el.setSize=Ext.emptyFn;this.el.setStyle({overflow:"hidden",margin:"0",border:"0 none"});this.el.dom.scroll="no";this.allowDomMove=false;this.autoWidth=true;this.autoHeight=true;Ext.EventManager.onWindowResize(this.fireResize,this);this.renderTo=this.el},fireResize:function(A,B){this.fireEvent("resize",this,A,B,A,B)}});Ext.ux.TaskButtonsPanel=Ext.extend(Ext.BoxComponent,{activeButton:null,enableScroll:true,scrollIncrement:0,scrollRepeatInterval:400,scrollDuration:0.35,animScroll:true,resizeButtons:true,buttonWidth:168,minButtonWidth:118,buttonMargin:2,buttonWidthSet:false,initComponent:function(){Ext.ux.TaskButtonsPanel.superclass.initComponent.call(this);this.on("resize",this.delegateUpdates);this.items=[];this.stripWrap=Ext.get(this.el).createChild({cls:"ux-taskbuttons-strip-wrap",cn:{tag:"ul",cls:"ux-taskbuttons-strip"}});this.stripSpacer=Ext.get(this.el).createChild({cls:"ux-taskbuttons-strip-spacer"});this.strip=new Ext.Element(this.stripWrap.dom.firstChild);this.edge=this.strip.createChild({tag:"li",cls:"ux-taskbuttons-edge"});this.strip.createChild({cls:"x-clear"})},addButton:function(C){var A=this.strip.createChild({tag:"li"},this.edge);var B=new Ext.ux.TaskBar.TaskButton(C,A);this.items.push(B);if(!this.buttonWidthSet){this.lastButtonWidth=B.container.getWidth()}this.setActiveButton(B);return B},removeButton:function(D){var B=document.getElementById(D.container.id);D.destroy();B.parentNode.removeChild(B);var E=[];for(var C=0,A=this.items.length;C<A;C++){if(this.items[C]!=D){E.push(this.items[C])}}this.items=E;this.delegateUpdates()},setActiveButton:function(A){this.activeButton=A;this.delegateUpdates()},delegateUpdates:function(){if(this.resizeButtons&&this.rendered){this.autoSize()}if(this.enableScroll&&this.rendered){this.autoScroll()}},autoSize:function(){var H=this.items.length;var C=this.el.dom.offsetWidth;var A=this.el.dom.clientWidth;if(!this.resizeButtons||H<1||!A){return}var J=Math.max(Math.min(Math.floor((A-4)/H)-this.buttonMargin,this.buttonWidth),this.minButtonWidth);var E=this.stripWrap.dom.getElementsByTagName("button");this.lastButtonWidth=Ext.get(E[0].id).findParent("li").offsetWidth;for(var F=0,I=E.length;F<I;F++){var B=E[F];var G=Ext.get(E[F].id).findParent("li").offsetWidth;var D=B.offsetWidth;B.style.width=(J-(G-D))+"px"}},autoScroll:function(){var F=this.items.length;var D=this.el.dom.offsetWidth;var C=this.el.dom.clientWidth;var E=this.stripWrap;var B=E.dom.offsetWidth;var G=this.getScrollPos();var A=this.edge.getOffsetsTo(this.stripWrap)[0]+G;if(!this.enableScroll||F<1||B<20){return}E.setWidth(C);if(A<=C){E.dom.scrollLeft=0;if(this.scrolling){this.scrolling=false;this.el.removeClass("x-taskbuttons-scrolling");this.scrollLeft.hide();this.scrollRight.hide()}}else{if(!this.scrolling){this.el.addClass("x-taskbuttons-scrolling")}C-=E.getMargins("lr");E.setWidth(C>20?C:20);if(!this.scrolling){if(!this.scrollLeft){this.createScrollers()}else{this.scrollLeft.show();this.scrollRight.show()}}this.scrolling=true;if(G>(A-C)){E.dom.scrollLeft=A-C}else{this.scrollToButton(this.activeButton,true)}this.updateScrollButtons()}},createScrollers:function(){var C=this.el.dom.offsetHeight;var A=this.el.insertFirst({cls:"ux-taskbuttons-scroller-left"});A.setHeight(C);A.addClassOnOver("ux-taskbuttons-scroller-left-over");this.leftRepeater=new Ext.util.ClickRepeater(A,{interval:this.scrollRepeatInterval,handler:this.onScrollLeft,scope:this});this.scrollLeft=A;var B=this.el.insertFirst({cls:"ux-taskbuttons-scroller-right"});B.setHeight(C);B.addClassOnOver("ux-taskbuttons-scroller-right-over");this.rightRepeater=new Ext.util.ClickRepeater(B,{interval:this.scrollRepeatInterval,handler:this.onScrollRight,scope:this});this.scrollRight=B},getScrollWidth:function(){return this.edge.getOffsetsTo(this.stripWrap)[0]+this.getScrollPos()},getScrollPos:function(){return parseInt(this.stripWrap.dom.scrollLeft,10)||0},getScrollArea:function(){return parseInt(this.stripWrap.dom.clientWidth,10)||0},getScrollAnim:function(){return{duration:this.scrollDuration,callback:this.updateScrollButtons,scope:this}},getScrollIncrement:function(){return(this.scrollIncrement||this.lastButtonWidth+2)},scrollToButton:function(E,A){E=E.el.dom.parentNode;if(!E){return}var C=E;var G=this.getScrollPos(),D=this.getScrollArea();var F=Ext.fly(C).getOffsetsTo(this.stripWrap)[0]+G;var B=F+C.offsetWidth;if(F<G){this.scrollTo(F,A)}else{if(B>(G+D)){this.scrollTo(B-D,A)}}},scrollTo:function(B,A){this.stripWrap.scrollTo("left",B,A?this.getScrollAnim():false);if(!A){this.updateScrollButtons()}},onScrollRight:function(){var A=this.getScrollWidth()-this.getScrollArea();var C=this.getScrollPos();var B=Math.min(A,C+this.getScrollIncrement());if(B!=C){this.scrollTo(B,this.animScroll)}},onScrollLeft:function(){var B=this.getScrollPos();var A=Math.max(0,B-this.getScrollIncrement());if(A!=B){this.scrollTo(A,this.animScroll)}},updateScrollButtons:function(){var A=this.getScrollPos();this.scrollLeft[A==0?"addClass":"removeClass"]("ux-taskbuttons-scroller-left-disabled");this.scrollRight[A>=(this.getScrollWidth()-this.getScrollArea())?"addClass":"removeClass"]("ux-taskbuttons-scroller-right-disabled")}});Ext.ux.TaskBar.TaskButton=function(B,A){this.win=B;Ext.ux.TaskBar.TaskButton.superclass.constructor.call(this,{iconCls:B.iconCls,text:Ext.util.Format.ellipsis(B.title,18),renderTo:A,handler:function(){if(B.minimized||B.hidden){B.show()}else{if(B==B.manager.getActive()){B.minimize()}else{B.toFront()}}},clickEvent:"mousedown",template:new Ext.Template('<table border="0" cellpadding="0" cellspacing="0" class="x-btn-wrap"><tbody><tr>','<td class="ux-taskbutton-left"><i>&#160;</i></td><td class="ux-taskbutton-center"><em unselectable="on"><button class="x-btn-text" type="{1}" style="height:28px;">{0}</button></em></td><td class="ux-taskbutton-right"><i>&#160;</i></td>',"</tr></tbody></table>")})};Ext.extend(Ext.ux.TaskBar.TaskButton,Ext.Button,{onRender:function(){Ext.ux.TaskBar.TaskButton.superclass.onRender.apply(this,arguments);this.cmenu=new Ext.menu.Menu({items:[{text:"Restore",handler:function(){if(!this.win.isVisible()){this.win.show()}else{this.win.restore()}},scope:this},{text:"Minimize",handler:this.win.minimize,scope:this.win},{text:"Maximize",handler:this.win.maximize,scope:this.win},"-",{text:"Close",handler:this.closeWin.createDelegate(this,this.win,true),scope:this.win}]});this.cmenu.on("beforeshow",function(){var B=this.cmenu.items.items;var A=this.win;B[0].setDisabled(A.maximized!==true&&A.hidden!==true);B[1].setDisabled(A.minimized===true);B[2].setDisabled(A.maximized===true||A.hidden===true)},this);this.el.on("contextmenu",function(B){B.stopEvent();if(!this.cmenu.el){this.cmenu.render()}var A=B.getXY();A[1]-=this.cmenu.el.getHeight();this.cmenu.showAt(A)},this)},closeWin:function(A,C,B){if(!B.isVisible()){B.show()}else{B.restore()}B.close()}});Ext.PagingToolbar.override({init:function(A){this.grid=A;this.grid.on("beforestatesave",this.saveState,this);Ext.util.Observable.capture(A.store,this.onStateChange,this)},saveState:function(A,B){B.start=A.store.lastOptions.params.start},onStateChange:function(D,B,A,C){if(D=="load"){this.grid.saveState()}}});function belongsToCombo(B,C,A){var A=A||{};combo=new Ext.form.ComboBox(Ext.applyIf(A,{fieldLabel:C.human_singular_name,id:C.foreign_key_name,name:B.model_name+"["+C.foreign_key_name+"]",anchor:"90%",triggerAction:"all",store:C.collectionStore(),pageSize:1000,forceSelection:true,displayField:"title",valueField:"id",hiddenName:B.model_name+"["+C.foreign_key_name+"]"}));combo.store.load({params:{start:0,limit:1000}});return combo}BelongsToCombo=function(A){var A=A||{};Ext.applyIf(A,{fieldLabel:A.belongs_to_model.human_singular_name,id:A.belongs_to_model.foreign_key_name,name:A.model.model_name+"["+A.belongs_to_model.foreign_key_name+"]",anchor:"95%",triggerAction:"all",store:A.belongs_to_model.collectionStore(),pageSize:1000,forceSelection:true,displayField:"title",valueField:"id",hiddenName:A.model.model_name+"["+A.belongs_to_model.foreign_key_name+"]"});BelongsToCombo.superclass.constructor.call(this,A);this.store.load({params:{start:0,limit:1000}})};Ext.extend(BelongsToCombo,Ext.form.ComboBox);Ext.reg("belongs_to_combo",BelongsToCombo);Ext.ux.MVC.controller.Base=function(config){this.application=application;this.showPanel=function(panel){this.application.getLayoutManager().showPanel(panel)};this.doAction=function(action_name,params){eval("this.view"+action_name+"("+params+")")}};Ext.ux.MVC.controller.CrudController=function(config){Ext.apply(this,config);Ext.applyIf(this,{batchDestroyUrl:"/admin/batch_destroy_"+this.model.url_name+".ext_json",deleteTitle:function(number_of_items_to_delete){if(number_of_items_to_delete>1){return"Delete "+this.model.human_plural_name+"?"}else{return"Delete "+this.model.human_singlular_name+"?"}},deleteMessage:function(number_of_items_to_delete){if(number_of_items_to_delete>1){return"Are you sure you want to delete these "+this.model.human_plural_name+"? This cannot be undone"}else{return"Are you sure you want to delete this "+this.model.human_singular_name+"? This cannot be undone"}},deleteFailure:function(){Ext.Msg.alert(this.model.human_singular_name+" not deleted","Something went wrong when trying to delete the "+this.model.human_singular_name+" - please try again")}});if(this.namespace){Ext.applyIf(this,{indexPanel:eval(this.namespace+".views."+this.model.class_name+".Index"),newPanel:eval(this.namespace+".views."+this.model.class_name+".New"),editPanel:eval(this.namespace+".views."+this.model.class_name+".Edit")})}Ext.ux.MVC.controller.CrudController.superclass.constructor.call(this,config)};Ext.extend(Ext.ux.MVC.controller.CrudController,Ext.ux.MVC.controller.Base,{viewIndex:function(A){this.showPanel(new this.indexPanel(A))},viewNew:function(A){this.showPanel(new this.newPanel(A))},viewEdit:function(A,B){ids=Ext.ux.MVC.params[":id"].split(",");if(ids.length==0){return false}this.showPanel(new this.editPanel({ids:ids}))},nextPage:function(A){this.nextOrPreviousPage(A,"UP")},previousPage:function(A){this.nextOrPreviousPage(A,"DOWN")},firstPage:function(A){A.load({params:{start:0,limit:A.lastOptions.params.limit}})},lastPage:function(A){limit=A.lastOptions.params.limit;lastPage=Math.floor((A.totalLength-1)/limit)*limit;A.load({params:{start:lastPage,limit:limit}})},nextOrPreviousPage:function(A,C){var B=A.lastOptions.params;if(C=="UP"){if(B.start+B.limit<A.totalLength){B.start=B.start+B.limit}}else{if(B.start-B.limit>=0){B.start=B.start-B.limit}}A.load({params:B})},deleteSelected:function(C){var D=new Array();selections=C.getSelectionModel().getSelections();for(var B=0;B<selections.length;B++){D.push(selections[B].data.id)}if(D.length==0){return false}var E=this.deleteTitle(D.length);var F=this.deleteMessage(D.length);var A=this.batchDestroyUrl;Ext.Msg.confirm(E,F,function(G){if(G=="yes"){Ext.Ajax.request({url:A,method:"post",params:"_method=delete&ids="+D.join(","),success:function(){C.store.reload()},failure:function(){this.deleteFailure();C.store.reload()}})}})}});Ext.ux.MVC.controller.SingletonController=function(A){Ext.apply(this,A);Ext.ux.MVC.controller.CrudController.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.MVC.controller.SingletonController,Ext.ux.MVC.controller.Base,{viewIndex:function(A){return this.viewEdit(A)},viewEdit:function(A){this.showPanel(new this.editPanel(A))}});Ext.ux.MVC.model.Base=function(A,B){Ext.apply(this,B,{model_name:A,underscore_name:A,url_name:this.urlize_name(A),human_singular_name:this.singularize_human_name(A),human_plural_name:this.pluralize_human_name(A),controller_name:this.controller_name(A),class_name:this.classify_name(A),foreign_key_name:A+"_id",parametized_foreign_key_name:":"+A+"_id",url_namespace:"/admin",url_extension:".ext_json"})};Ext.ux.MVC.model.Base.prototype={namespacedUrl:function(A){return(String.format("{0}/{1}{2}",this.url_namespace,A,this.url_extension))},singleDataUrl:function(A){if(A.data&&A.data.id){A=A.data.id}return this.namespacedUrl(String.format("{0}/{1}",this.url_name,A))},collectionDataUrl:function(A){return this.namespacedUrl(this.url_name)},showUrl:function(A){return this.editUrl(A)},newUrl:function(){return this.url_name+"/New"},editUrl:function(A){if(A.data&&A.data.id){A=A.data.id}return this.url_name+"/Edit/"+A},collectionUrl:function(A){return this.url_name+"/Index"},treeUrl:function(A){return this.namespacedUrl(String.format("{0}/tree",this.url_name))},treeReorderUrl:function(A){return this.namespacedUrl(String.format("{0}/reorder/{1}",this.url_name,A.data.id))},singleStore:function(B,A){if(A===undefined){A={}}return new Ext.data.Store(Ext.applyIf(A,{url:this.singleDataUrl(B),reader:this.getReader()}))},getRecord:function(){if(!this.record){this.record=Ext.data.Record.create(this.fields)}return this.record},getReader:function(){if(!this.reader){this.reader=new Ext.data.JsonReader({root:this.url_name,totalProperty:"results"},this.getRecord())}return this.reader},collectionStore:function(B){options=Ext.apply({},B,{proxy:new Ext.data.HttpProxy({url:this.collectionDataUrl(B),method:"get",params:{start:0,limit:25}}),reader:this.getReader(),remoteSort:true});var A=new Ext.data.Store(options);A.load=function(D){D=D||{};if(this.fireEvent("beforeload",this,D)!==false){this.storeOptions(D);var E=Ext.apply(D.params||{},this.baseParams);if(this.sortInfo&&this.remoteSort){var C=this.paramNames;E[C.sort]=this.sortInfo.field;E[C.dir]=this.sortInfo.direction}this.proxy.conn.url=this.proxy.conn.url.split("?")[0]+"?"+Ext.urlEncode(E);this.proxy.load(E,this.reader,this.loadRecords,this,D);return true}else{return false}};return A},collectionGroupStore:function(A){options=Ext.apply({},A,{proxy:new Ext.data.HttpProxy({url:this.collectionDataUrl(A),method:"get",params:{start:0,limit:25}}),reader:this.getReader(),remoteSort:true});store=new Ext.data.GroupingStore(options);store.load=function(C){C=C||{};if(this.fireEvent("beforeload",this,C)!==false){this.storeOptions(C);var D=Ext.apply(C.params||{},this.baseParams);if(this.sortInfo&&this.remoteSort){var B=this.paramNames;D[B.sort]=this.sortInfo.field;D[B.dir]=this.sortInfo.direction}this.proxy.conn.url=this.proxy.conn.url.split("?")[0]+"?"+Ext.urlEncode(D);this.proxy.load(D,this.reader,this.loadRecords,this,C);return true}else{return false}};return store},loadFormWithId:function(E,C,D,B){var A=this.singleStore({data:{id:E}},B);A.on("load",function(I,G,H){var F=G[0];C.form.loadRecord(F)});A.load(D);return A},loadFormWithRecord:function(D,B,C){if(C===undefined){C={}}var A=this.singleStore(D);A.on("load",function(H,F,G){var E=F[0];B.form.loadRecord(E)});A.load(C);return A},loadFormWithSingletonRecord:function(B,C){var A=this.singleStore();A.on("load",function(G,E,F){var D=E[0];B.form.loadRecord(D)});A.load(C);return A},destroy:function(E,C){var C=C||{};var B=this.singleDataUrl(E);Ext.apply(C,{url:B});var A="Deleted "+this.human_singular_name;var D="Could not delete the "+this.human_singular_name+", please try again";Ext.applyIf(C,{url:B,method:"post",params:"_method=delete",success:function(){Ext.ux.MVC.NotificationManager.inform(A)},failure:function(){Ext.Msg.alert(D)}});Ext.Ajax.request(C)},moveTreeNode:function(B,F,D,E,C){var A=this.human_singular_name;Ext.Ajax.request({method:"post",url:this.treeReorderUrl({data:{id:F.id}}),params:"parent="+E.id+"&index="+C,success:function(){Ext.ux.MVC.NotificationManager.inform("The "+A+" was moved successfully")},failure:function(){Ext.Msg.alert("Error moving "+A,"Something went wrong while moving this "+A+", please try again")}})},newRecord:function(){return eval("new "+this.class_name+"Record")},singularize_human_name:function(A){return A.replace(/_/g," ").titleize()},pluralize_human_name:function(A){return(A+"s").replace(/_/g," ").titleize()},urlize_name:function(A){return A+"s"},controller_name:function(A){return this.pluralize_human_name(A).replace(/ /g,"")+"Controller"},classify_name:function(A){return this.singularize_human_name(A).replace(/ /g,"")}};function treeWithForm(B){var A={};Ext.apply(A,B,{items:null,frame:true,autoLoad:true,labelAlign:"left",autoScroll:true,treeEditable:false,treeEditableField:"title",beforeFormLoad:function(){},afterFormLoad:function(){},beforeDelete:function(){},afterDelete:function(){},beforeSave:function(){},afterSave:function(){},beforeCreate:function(){},afterCreate:function(){},beforeNew:function(){},afterNew:function(){}});human_name=A.model.human_singular_name;newButton=new defaultAddButton({model:A.model,text:"Add a new "+human_name,tooltip:"Adds a new "+human_name,handler:function(){if(A.beforeNew()!==false){var D=(new Ext.tree.TreeNode({text:"Unsaved New "+human_name,allowDrag:false,iconCls:A.model.model_name+"_unsaved",qtip:"This "+human_name+' has not been saved yet, you need to fill in the form and click "Save Changes" first'}));if(selectionModel.selNode&&!(/ynode/.test(selectionModel.selNode.id))){selectionModel.selNode.appendChild(D);panel.insertAsChildOf=selectionModel.selNode.id}else{tree.root.appendChild(D)}record=A.model.newRecord();form.form.reset();form.form.loadRecord(record);panel.recordId=null;selectionModel.select(D);A.afterNew()}}});deleteButton=new defaultDeleteButton({model:A.model,text:"Delete selected "+human_name,tooltip:"Deletes the selected "+human_name,handler:function(){id=selectionModel.getSelectedNode().id;if(A.beforeDelete()!==false){Ext.Msg.confirm("Delete "+human_name+"?","Are you sure you want to delete this "+human_name+"?  This cannot be undone",function(D){if(D=="yes"){Ext.Ajax.request({url:A.model.singleUrl({data:{id:id}}),method:"post",params:"_method=delete",success:function(){Ext.ux.MVC.Flash.flash("The "+human_name+" has been successfully deleted",human_name+" deleted");C();A.afterDelete();form.form.reset();panel.formLoaded=false},failure:function(){Ext.Msg.alert(human_name+" NOT Deleted","Something went wrong while deleting this "+human_name+", it has NOT been deleted")}})}})}}});saveButton=new Ext.Button({text:"Save changes",iconCls:"save",handler:function(){if(A.beforeSave()!==false){if(panel.formLoaded){if(panel.recordId==null){extra_params="";if(panel.insertAsChildOf!=null){extra_params="insert_as_child_of="+panel.insertAsChildOf}form.form.submit({waitMsg:"Saving Data...",url:"/admin/"+A.model.url_name+".ext_json",params:extra_params,failure:function(){Ext.Msg.alert("Operation Failed","There were errors saving this "+human_name+", please see any fields with red icons")},success:function(D,E){if(A.success){A.success.call(this,E.result,form)}Ext.ux.MVC.Flash.flash("Your changes have been saved",human_name+" successfully updated");C()}})}else{form.form.submit({waitMsg:"Saving Data...",url:"/admin/"+A.model.url_name+"/"+panel.recordId+".ext_json",params:"_method=put",failure:function(){Ext.Msg.alert("Operation Failed","There were errors saving this "+human_name+", please see any fields with red icons")},success:function(D,E){if(A.success){A.success.call(this,E.result,form)}Ext.ux.MVC.Flash.flash("Your changes have been saved",human_name+" successfully updated")}})}}else{Ext.Msg.alert("Form Not Loaded","Please load the form first by clicking a "+human_name+" from the tree")}}}});toolbar=new Ext.Toolbar({items:[newButton,"-",deleteButton]});tree=new Ext.tree.TreePanel({animate:true,autoScroll:true,containerScroll:true,collapsible:true,bodyStyle:"background-color: #fff; border: 1px solid #99BBE8;",enableDD:true,region:"west",width:300,split:true,minWidth:200,rootVisible:false,tbar:toolbar,title:A.model.human_plural_name,loader:new Ext.tree.TreeLoader({requestMethod:"GET",dataUrl:A.model.treeUrl()})});treeRootNode=new Ext.tree.AsyncTreeNode({text:"Root",draggable:false,id:"source"});tree.setRootNode(treeRootNode);if(A.treeEditable){editor=new Ext.tree.TreeEditor(tree,{allowBlank:false,ignoreNoChange:true,blankText:"A title is required",selectOnFocus:true});editor.on("complete",function(E,F,D){id=E.editNode.attributes.id;if(A.beforeCreate()!==false){if(/ynode/.test(id)){params=A.model.model_name+"["+A.treeEditableField+"]="+F;if(E.editNode.parentNode){params+="&insert_as_child_of="+E.editNode.parentNode.id}Ext.Ajax.request({method:"post",url:A.model.collectionUrl(),params:params,success:A.afterCreate})}else{Ext.Ajax.request({method:"post",url:A.model.singleUrl({data:{id:id}}),params:"_method=put&"+A.model.model_name+"["+A.treeEditableField+"]="+F,success:function(){Ext.ux.MVC.Flash.flash("The "+human_name+" "+A.treeEditableField+" was successfully updated",human_name+" "+A.treeEditableField+" updated")},failure:function(){Ext.Msg.alert(human_name+" "+A.treeEditableField+" NOT updated","The "+A.treeEditableField+" of this "+human_name+" could not be updated - please try again")}})}}})}tree.on("movenode",function(D,H,F,G,E){Ext.Ajax.request({method:"post",url:A.model.treeReorderUrl({data:{id:H.id}}),params:"parent="+G.id+"&index="+E,success:function(){Ext.ux.MVC.Flash.flash("The "+human_name+" was moved successfully",human_name+" moved")},failure:function(){Ext.Msg.alert("Error moving "+human_name,"Something went wrong while moving this "+human_name+", please try again")}})});selectionModel=tree.getSelectionModel();tree.getSelectionModel().on("selectionchange",function(D){if(!D.selNode){return}if(selectionModel.getSelectedNode()==null||D.selNode.id=="source"||(/ynode/).test(D.selNode.id)){deleteButton.disable()}else{id=D.selNode.id;A.model.loadFormWithId(id,form,{callback:A.afterFormLoad},{listeners:{beforeload:A.beforeFormLoad}});deleteButton.enable();saveButton.enable();panel.formLoaded=true;panel.recordId=id}});function C(){treeRootNode.reload();deleteButton.disable()}form=new defaultEditForm({region:"center",addDefaultButtons:false,model:A.model,items:A.items});form.addButton(saveButton);panel=new Ext.Panel({frame:true,layout:"border",items:[tree,form]});panel.formLoaded=false;panel.recordId=null;panel.insertAsChildOf=null;return panel}Ext.ux.MVC.view.AutoCompleteComboBox=function(A){var A=A||{};Ext.applyIf(A,{name:A.model.model_name+"["+A.id+"]",fieldLabel:A.id,displayField:A.id,mode:"local",selectOnFocus:true,typeAhead:true,triggerAction:"all",autoLoad:true});Ext.ux.MVC.view.AutoCompleteComboBox.superclass.constructor.call(this,A);if(A.autoLoad){this.store.load()}};Ext.extend(Ext.ux.MVC.view.AutoCompleteComboBox,Ext.form.ComboBox);Ext.reg("autocomplete_combo_box",Ext.ux.MVC.view.AutoCompleteComboBox);Ext.ux.MVC.view.DefaultEditForm=function(A){var A=A||{};if(!A.model){alert("No model provided to the DefaultEditForm");return false}Ext.applyIf(A,{frame:true,iconCls:"form_edit",changeDocumentTitle:true,title:"Edit "+A.model.human_singular_name,autoScroll:true,autoLoadForm:true,bodyStyle:"position: relative",labelAlign:"top",addDefaultButtons:true,addPutMethodField:true});if(A.addPutMethodField){A.items=[{xtype:"hidden",name:"_method",value:"put"}].concat(A.items)}if(A.changeDocumentTitle){document.title="Edit "+A.model.human_singular_name}Ext.applyIf(A,{cancelAction:function(){A.editNext()},saveAction:function(){try{tinymce.EditorManager.triggerSave()}catch(B){}ids=Ext.ux.MVC.params[":id"].split(",");this.form.submit({waitMsg:"Saving Data...",url:A.model.singleDataUrl(ids[0]),failure:function(){Ext.Msg.alert("Operation Failed","There were errors saving this "+A.model.human_singular_name+", please see any fields with red icons")},success:function(C,D){if(A.success){A.success.call(this,D.result,form)}Ext.ux.MVC.Flash.flash("Your changes have been saved",A.model.human_singular_name+" successfully updated");A.editNext()}})},editNext:function(){ids=Ext.ux.MVC.params[":id"].split(",");current_id=ids.shift();if(ids instanceof Array&&ids.length>0){Ext.History.add(this.model.editUrl(ids.join(",")))}else{if(this.model.parent_model){if(parent_id=Ext.ux.MVC.params[this.model.parent_model.parametized_foreign_key_name]){Ext.History.add(this.model.parent_model.editUrl(parent_id))}else{Ext.History.add(this.model.parent_model.collectionUrl())}}else{Ext.History.add(this.model.collectionUrl())}}},handleKeypress:function(C){if(C.getKey()==Ext.EventObject.ESC){A.cancelAction();C.stopEvent()}else{if(C.ctrlKey){var B=C.getCharCode();switch(B){case 115:A.saveAction();C.stopEvent()}}}}});Ext.ux.MVC.view.DefaultEditForm.superclass.constructor.call(this,A);if(A.addDefaultButtons){this.saveButton=new Ext.Button({text:"Save",iconCls:"save",scope:this,handler:A.saveAction,tooltip:"Saves this "+A.model.human_singular_name+" (keyboard shortcut: CTRL + s)"});this.cancelButton=new Ext.Button({text:"Cancel",iconCls:"cancel",handler:A.cancelAction,tooltip:"Keyboard shortcut: ESC"});this.addButton(this.saveButton);this.addButton(this.cancelButton)}if(A.autoLoadForm){A.model.loadFormWithId(A.ids[0],this)}};Ext.extend(Ext.ux.MVC.view.DefaultEditForm,Ext.FormPanel);Ext.reg("default_new_form",Ext.ux.MVC.view.DefaultEditForm);Ext.ux.MVC.view.DefaultNewForm=function(A){var A=A||{};if(!A.model){alert("No model provided to the DefaultNewForm");return false}var B=A.model.human_singular_name;Ext.applyIf(A,{frame:true,changeDocumentTitle:true,labelAlign:"top",autoScroll:true,bodyStyle:"position: relative;",iconCls:"form_new",title:"New "+B,url:A.model.collectionDataUrl(A)});Ext.ux.MVC.view.DefaultNewForm.superclass.constructor.call(this,A);if(A.changeDocumentTitle){document.title="New "+A.model.human_singular_name}Ext.applyIf(A,{cancelAction:function(){if(A.model.parent_model){Ext.History.back()}else{Ext.History.add(A.model.collectionUrl())}},saveAction:function(){try{tinymce.EditorManager.triggerSave()}catch(C){}this.form.submit({url:A.url,waitMsg:"Saving Data...",failure:function(){Ext.Msg.alert("Operation Failed","There were errors saving this "+B+", please see any fields with red icons")},success:function(D,E){Ext.ux.MVC.Flash.flash("The "+B+" was created successfully",B+" Created");if(A.afterSave){A.afterSave.call(this,E.result,form)}else{A.cancelAction()}}})}});this.addButton({text:"Save",iconCls:"save",scope:this,handler:A.saveAction,tooltip:"Saves this "+B+" (keyboard shortcut: CTRL + s)"});this.addButton({text:"Cancel",iconCls:"cancel",handler:A.cancelAction,tooltip:"Keyboard shortcut: ESC"});this.handleKeypress=function(D){if(D.getKey()==Ext.EventObject.ESC){A.cancelAction();D.stopEvent()}else{if(D.ctrlKey){var C=D.getCharCode();switch(C){case 115:A.saveAction();D.stopEvent()}}}}};Ext.extend(Ext.ux.MVC.view.DefaultNewForm,Ext.FormPanel);Ext.reg("default_new_form",Ext.ux.MVC.view.DefaultNewForm);Ext.ux.MVC.view.DefaultSingletonForm=function(A){var A=A||{};Ext.applyIf(A,{items:null,frame:true,changeDocumentTitle:true,labelAlign:"left",autoScroll:true,autoLoadForm:true,iconCls:"form_new",bodyStyle:"position: relative"});Ext.applyIf(A,{url:A.model.singleDataUrl(A),title:"Edit "+A.model.human_singular_name});Ext.ux.MVC.view.DefaultSingletonForm.superclass.constructor.call(this,A);if(A.changeDocumentTitle){document.title="Edit the "+A.model.human_singular_name}Ext.applyIf(A,{saveAction:function(){this.form.submit({url:A.model.singleDataUrl,waitMsg:"Saving Data...",failure:function(){Ext.Msg.alert("Operation Failed","There were errors saving the "+A.model.human_singular_name+", please see any fields with red icons")},success:function(B,C){Ext.ux.MVC.Flash.flash("The "+A.model.human_singular_name+" was updated successfully",A.model.human_singular_name+" Updated");if(A.success){A.success.call(this,C.result,form)}}})}});this.addButton({text:"Save",iconCls:"save",scope:this,handler:A.saveAction,tooltip:"Saves this "+A.model.human_singular_name+" (keyboard shortcut: CTRL + s)"});this.handleKeypress=function(C){if(C.ctrlKey){var B=C.getCharCode();switch(B){case 115:A.saveAction();C.stopEvent()}}};if(A.autoLoadForm){A.model.loadFormWithSingletonRecord(this)}};Ext.extend(Ext.ux.MVC.view.DefaultSingletonForm,Ext.FormPanel);Ext.reg("default_singleton_form",Ext.ux.MVC.view.DefaultSingletonForm);Ext.ux.MVC.view.FlaggedTextField=function(C){var C=C||{};var A={};var B={};Ext.apply(B,{xtype:"textfield"},C);this.flagButton=new Ext.Button({iconCls:"flag_yellow",style:"padding-top: 18px;",tooltip:"Click to flag this field as inappropriate",scope:this,handler:function(){window_config={field_id:B.id,fieldLabel:B.fieldLabel,flaggedTextField:this};this.win=new Ext.ux.MVC.FlaggedTextFieldWindow(window_config);this.win.show()}});this.textField=new Ext.form.TextField(B);Ext.apply(A,{layout:"form",items:[{layout:"column",items:[{columnWidth:0.85,layout:"form",items:[this.textField]},{columnWidth:0.15,layout:"form",items:[this.flagButton]}]}]});this.updateFlag=function(D){this.flagButton.setIconClass("flag_green");pr=D.data.profile_reviews;for(var E=pr.length-1;E>=0;E--){if(pr[E].field==B.id){this.setFlagColour("red")}}};this.setFlagColour=function(D){this.flagButton.setIconClass("flag_"+D)};Ext.ux.MVC.view.FlaggedTextField.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.MVC.view.FlaggedTextField,Ext.Panel);Ext.reg("flagged_textfield",Ext.ux.MVC.view.FlaggedTextField);Ext.ux.MVC.FlaggedTextFieldWindow=function(A){var A=A||{};flagText=ILF.flaggedFields[A.field_id];this.flagForm=new Ext.form.FormPanel({bodyStyle:"background-color: #dfe8f6; padding: 15px",labelAlign:"top",items:[{xtype:"label",text:"Field to flag: "+A.fieldLabel},{xtype:"textarea",fieldLabel:"Reason",anchor:"100% 80%",id:A.field_id+"_flag_message",value:flagText}],buttons:[{text:"Mark as OK",iconCls:"flag_green",scope:this,handler:function(){f=ILF.flaggedFields;newObject={};for(field in f){if(field!=A.field_id){newObject[field]=f[field]}}ILF.flaggedFields=newObject;A.flaggedTextField.setFlagColour("green");Ext.ux.MVC.Flash.flash("The field has been unflagged, don't forget to save the form for changes to take effect","Flag unset");this.window.close()}},{text:"Mark as Flagged",iconCls:"flag_red",scope:this,handler:function(){f=ILF.flaggedFields;f[A.field_id]=Ext.getCmp(A.field_id+"_flag_message").getValue();A.flaggedTextField.setFlagColour("red");Ext.ux.MVC.Flash.flash("The field has been marked as flagged, don't forget to save the form for changes to take effect","Flag set");this.window.close()}}]});Ext.applyIf(A,{title:"Flag as inappropriate",layout:"fit",minHeight:300,minWidth:400,height:300,width:400,items:[this.flagForm],modal:true});Ext.ux.MVC.FlaggedTextFieldWindow.superclass.constructor.call(this,A);this.window=this};Ext.extend(Ext.ux.MVC.FlaggedTextFieldWindow,Ext.Window);Ext.ux.MVC.view.LiveSearchComboBox=function(A){var A=A||{};Ext.applyIf(A,{typeAhead:false,loadingText:"Searching...",pageSize:10,anchor:"95%",autoLoad:true,minChars:2});Ext.ux.MVC.view.LiveSearchComboBox.superclass.constructor.call(this,A);tempCombo=this;this.store.on("load",function(C,B,D){tempCombo.setValue(tempCombo.getValue())});if(A.autoLoad){tempCombo.store.load()}};Ext.extend(Ext.ux.MVC.view.LiveSearchComboBox,Ext.form.ComboBox);Ext.reg("live_search_combo_box",Ext.ux.MVC.view.LiveSearchComboBox);Ext.ux.MVC.view.LocalComboBox=function(A){var A=A||{};Ext.applyIf(A,{mode:"local",displayField:"human_name",valueField:"class_name",triggerAction:"all",forceSelection:true,anchor:"95%"});Ext.applyIf(A,{name:A.model.model_name+"["+A.id+"]",hiddenName:A.model.model_name+"["+A.id+"]",fieldLabel:A.id});Ext.ux.MVC.view.LocalComboBox.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.MVC.view.LocalComboBox,Ext.form.ComboBox);Ext.reg("local_combo_box",Ext.ux.MVC.view.LocalComboBox);Ext.ux.MVC.DefaultAddButton=function(A){var A=A||{};if(!A.handler){throw new Error("You must supply a handler to DefaultAddButton")}Ext.applyIf(A,{iconCls:"add",text:"Add"});if(A.model){Ext.applyIf(A,{tooltip:"Shows new "+A.model.human_singular_name+" form (shortcut key: a)"})}Ext.ux.MVC.DefaultAddButton.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.MVC.DefaultAddButton,Ext.Toolbar.Button);Ext.reg("default_add_button",Ext.ux.MVC.DefaultAddButton);Ext.ux.MVC.DefaultCSVExportButton=function(B){var B=B||{};if(!B.model){throw new Error("You must supply a model to DefaultDeleteButton")}Ext.applyIf(B,{text:"Export as CSV",iconCls:"page_white_excel"});if(B.model){var A=B.model.human_plural_name;Ext.applyIf(B,{tooltip:"Export all selected "+A+" to a CSV file.  If no "+A+" are selected, all will be exported to a single file."})}Ext.ux.MVC.DefaultCSVExportButton.superclass.constructor.call(this,B)};Ext.extend(Ext.ux.MVC.DefaultCSVExportButton,Ext.Toolbar.Button);Ext.reg("default_csv_export_button",Ext.ux.MVC.DefaultCSVExportButton);Ext.ux.MVC.DefaultDeleteButton=function(A){var A=A||{};if(!A.handler){throw new Error("You must supply a handler to DefaultDeleteButton")}Ext.applyIf(A,{iconCls:"delete",text:"Delete",disabled:true});if(A.model){Ext.applyIf(A,{tooltip:"Deletes all selected "+A.model.human_plural_name+" (shortcut key: Delete)"})}Ext.ux.MVC.DefaultDeleteButton.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.MVC.DefaultDeleteButton,Ext.Toolbar.Button);Ext.reg("default_delete_button",Ext.ux.MVC.DefaultDeleteButton);Ext.ux.MVC.DefaultEditButton=function(A){var A=A||{};if(!A.handler){throw new Error("You must supply a handler to DefaultEditButton")}Ext.applyIf(A,{iconCls:"edit",text:"Edit",disabled:true});if(A.model){Ext.applyIf(A,{tooltip:"Edits all selected "+A.model.human_plural_name+" (shortcut key: e)"})}Ext.ux.MVC.DefaultEditButton.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.MVC.DefaultEditButton,Ext.Toolbar.Button);Ext.reg("default_edit_button",Ext.ux.MVC.DefaultEditButton);Ext.ux.MVC.DefaultGridTopToolbar=function(B){var B=B||{};Ext.applyIf(B,{items:[],itemsBefore:[],itemsAfter:[],hasSearchField:true,hasAddButton:true,hasEditButton:true,hasDeleteButton:true,hasCSVExportButton:false,searchFieldConfig:{},addButtonConfig:{},editButtonConfig:{},deleteButtonConfig:{},csvButtonConfig:{},addButtonHandler:Ext.emptyFn,editButtonHandler:Ext.emptyFn,deleteButtonHandler:Ext.emptyFn,csvButtonHandler:Ext.emptyFn});var A=B.itemsBefore;if(B.hasSearchField){Ext.applyIf(B.searchFieldConfig,{width:200,label:"Search by Name:",enableKeyEvents:true});this.searchField=new Ext.app.SearchField(B.searchFieldConfig);A=A.concat([B.searchFieldConfig.label," ",this.searchField])}if(B.hasAddButton){this.addButton=new Ext.ux.MVC.DefaultAddButton(Ext.apply(B.addButtonConfig,{model:B.model,handler:B.addButtonHandler}));A=A.concat(["-",this.addButton])}if(B.hasEditButton){this.editButton=new Ext.ux.MVC.DefaultEditButton(Ext.apply(B.editButtonConfig,{model:B.model,handler:B.editButtonHandler}));A=A.concat(["-",this.editButton])}if(B.hasDeleteButton){this.deleteButton=new Ext.ux.MVC.DefaultDeleteButton(Ext.apply(B.deleteButtonConfig,{model:B.model,handler:B.deleteButtonHandler}));A=A.concat(["-",this.deleteButton])}if(B.hasCsvExportButton){this.csvExportButton=new Ext.ux.MVC.DefaultCSVExportButton(Ext.apply(B.csvButtonConfig,{model:B.model,handler:B.csvButtonHandler}));A=A.concat(["-",this.csvExportButton])}A=A.concat(B.itemsAfter);B.items=A;this.setupHandlers=function(){this.ownerCt.getSelectionModel().on("selectionchange",function(C){if(C.selections.length==0){this.editButton.disable();this.deleteButton.disable()}else{this.editButton.enable();this.deleteButton.enable()}},this);if(this.searchField){this.searchField.store=this.ownerCt.store;this.searchField.on("keydown",function(C,D){D.stopPropagation()})}};Ext.ux.MVC.DefaultGridTopToolbar.superclass.constructor.call(this,B)};Ext.extend(Ext.ux.MVC.DefaultGridTopToolbar,Ext.Toolbar);Ext.reg("default_grid_top_toolbar",Ext.ux.MVC.DefaultGridTopToolbar);Ext.ux.MVC.view.DefaultPagingGrid=function(A){var A=A||{};if(A.model==null){alert("Error - no Model supplied to DefaultPagingGrid");return false}Ext.applyIf(A,{viewConfig:{forceFit:true},changeDocumentTitle:true,tbar:null,autoLoadStore:true,headings:[],clicksToEdit:1,loadMask:true});Ext.applyIf(A,{iconCls:"grid_list",id:A.model.url_name+"_index",store:A.model.collectionStore(),saveEditAction:function(E){var D=E.record;var G=E.field;var F=E.value;Ext.Ajax.request({url:A.model.singleDataUrl(D),method:"post",params:"_method=put&"+A.model.underscore_name+"["+G+"]="+F,success:function(){D.commit()},failure:function(){Ext.Msg.alert(A.model.human_singular_name+" NOT Updated","Something went wrong when trying to update this "+A.model.human_singular_name+" - please try again")}})}});this.store=A.store;this.sm=A.sm=new Ext.grid.CheckboxSelectionModel();this.columnModel=new Ext.grid.ColumnModel([this.sm].concat(A.headings));this.columnModel.defaultSortable=true;this.columnModel.defaultWidth=160;A.filters=new Ext.ux.grid.GridFilters({filters:A.headings});A.bbar=new Ext.ux.MVC.DefaultPagingToolbar({store:A.store,model:A.model});A.plugins=[A.bbar,A.filters];A.cm=this.columnModel;A.controller=null;this.handleKeypress=function(E){if(A.searchField.hasFocus){return false}if(E.getKey()==Ext.EventObject.DELETE){A.deleteAction()}else{var D=E.getCharCode();switch(D){case 97:A.newAction();break;case 101:A.editAction();break;case 110:A.controller.nextPage(A.store);break;case 112:A.controller.previousPage(A.store);break;case 113:A.toggleEditableAction(A);break;case 114:A.store.reload();break;case 102:A.controller.firstPage(A.store);break;case 108:A.controller.lastPage(A.store);break;case 115:Ext.get(A.searchField.id).focus();break}}};Ext.ux.MVC.view.DefaultPagingGrid.superclass.constructor.call(this,A);if(A.changeDocumentTitle){document.title="View "+A.model.human_plural_name}try{var C=Ext.state.Manager.getProvider().get(A.id).start||0}catch(B){var C=0}if(A.autoLoadStore){this.store.load({params:{start:C,limit:25}})}};Ext.extend(Ext.ux.MVC.view.DefaultPagingGrid,Ext.grid.GridPanel);Ext.reg("default_paging_grid",Ext.ux.MVC.view.DefaultPagingGrid);Ext.ux.MVC.view.DefaultPagingGridWithTopToolbar=function(B){var B=B||{};if(!B.model){alert("You didn't provide a model in your Default Paging Grid With Top Toolbar class");return false}Ext.applyIf(B,{editable:false,topToolbarButtonsBefore:[],topToolbarButtonsAfter:[],displaySearchByName:true,displayAddButton:true,displayEditButton:true,displayDeleteButton:true,displayCSVExportButton:true});Ext.applyIf(B,{toggleEditableAction:function(C){C.editable=!C.editable;controller=application.getControllerByName(B.model.controller_name);controller.viewIndex(C)},newAction:function(){Ext.History.add(this.model.newUrl())},editAction:function(){var D=new Array();selections=this.getSelectionModel().getSelections();for(var C=0;C<selections.length;C++){D.push(selections[C].data.id)}Ext.History.add(B.model.editUrl(D.join(",")))},deleteAction:function(){controller=application.getControllerByName(B.model.controller_name);controller.deleteSelected(this)}});var A=[];if(B.displaySearchByName){B.searchField=new Ext.app.SearchField({store:this.store,width:220});A=A.concat(["Search by Name:"," ",B.searchField])}A=A.concat(B.topToolbarButtonsBefore);if(B.displayAddButton){this.addButton=new Ext.ux.MVC.DefaultAddButton({model:B.model,handler:B.newAction});A=A.concat(["-",this.addButton])}if(B.displayEditButton){this.editButton=new Ext.ux.MVC.DefaultEditButton({model:B.model,handler:B.editAction,scope:this});A=A.concat(["-",this.editButton])}if(B.displayDeleteButton){this.deleteButton=new Ext.ux.MVC.DefaultDeleteButton({model:B.model,handler:B.deleteAction,scope:this});A=A.concat(["-",this.deleteButton])}if(B.displayCSVExportButton){this.csvExportButton=new Ext.ux.MVC.DefaultCSVExportButton({xtype:"default_csv_export_button",model:B.model,scope:this});A=A.concat(["-",this.csvExportButton])}A=A.concat(B.topToolbarButtonsAfter);B.tbar=new Ext.Toolbar({items:A});Ext.ux.MVC.view.DefaultPagingGridWithTopToolbar.superclass.constructor.call(this,B);if(B.displaySearchByName){B.searchField.store=this.store}this.on("rowdblclick",B.editAction);this.getSelectionModel().on("selectionchange",function(C){if(C.selections.length==0){this.editButton.disable();this.deleteButton.disable()}else{this.editButton.enable();this.deleteButton.enable()}},this)};Ext.extend(Ext.ux.MVC.view.DefaultPagingGridWithTopToolbar,Ext.ux.MVC.view.DefaultPagingGrid);Ext.reg("default_paging_grid_with_top_toolbar",Ext.ux.MVC.view.DefaultPagingGridWithTopToolbar);Ext.ux.MVC.DefaultPagingToolbar=function(A){var A=A||{};if(!A.model){throw new Error("You must supply a model to the DefaultPagingToolbar")}Ext.applyIf(A,{pageSize:25,nextText:"Next Page (shortcut key: n)",prevText:"Previous Page (shortcut key: p)",refreshText:"Refresh (shortcut key: r)",firstText:"First Page (shortcut key: f)",lastText:"Last Page (shortcut key: l)",displayInfo:true,store:A.model.collectionStore(),items:[new Ext.Toolbar.Fill()],displayMsg:"Displaying "+A.model.human_plural_name+" {0} - {1} of {2}",emptyMsg:"No "+A.model.human_plural_name+" to display"});Ext.ux.MVC.DefaultPagingToolbar.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.MVC.DefaultPagingToolbar,Ext.PagingToolbar);Ext.reg("default_paging_toolbar",Ext.ux.MVC.DefaultPagingToolbar);Ext.ux.MVC.view.HabtmGrid=function(A){var A=A||{};if(!A.model){alert("You didn't provide a model to your HABTM Grid class");return false}if(!A.habtm_model){alert("You didn't provide a habtm_model to your HABTM Grid class");return false}this.selectionModel=new Ext.grid.CheckboxSelectionModel();Ext.applyIf(A,{store:A.habtm_model.collectionStore(),title:A.habtm_model.human_plural_name,height:400,loadMask:true,viewConfig:{forceFit:true},sm:this.selectionModel,columns:[this.selectionModel].concat(A.headings),autoLoadStore:false,id:A.model.model_name+"_habtm_"+A.habtm_model.model_name+"_grid"});Ext.ux.MVC.view.HabtmGrid.superclass.constructor.call(this,A);function B(C){records=C.getSelections();ids=new Array();for(var D=records.length-1;D>=0;D--){ids.push(records[D].data.id)}Ext.getCmp(A.form_field_id).setRawValue(ids.join(","))}this.selectionModel.on("rowselect",B);this.selectionModel.on("rowdeselect",B);A.store.on("load",function(C){ids=Ext.getCmp(A.form_field_id).getRawValue().split(",");records=C.data.items;selected_records=new Array();this.selectionModel.suspendEvents();for(var E=records.length-1;E>=0;E--){for(var D=ids.length-1;D>=0;D--){if(ids[D]==records[E].data.id){selected_records.push(records[E])}}}try{this.selectionModel.selectRecords(selected_records);this.selectionModel.resumeEvents()}catch(F){}},this);if(A.autoLoadStore){A.store.load({params:{start:0,limit:1000}})}};Ext.extend(Ext.ux.MVC.view.HabtmGrid,Ext.grid.GridPanel);Ext.reg("habtm_grid",Ext.ux.MVC.view.HabtmGrid);Ext.ux.MVC.view.HasManyGrid=function(A){var A=A||{};if(!A.model){alert("You didn't provide a model to your Has Many Grid class");return false}Ext.applyIf(A,{title:A.model.human_plural_name,frame:false,height:300,autoLoadStore:false,displayToggleEditableButton:false,newAction:function(){controller=application.getControllerByName(A.model.controller_name);controller.viewNew(Ext.applyIf(A.parent_ids,{id:A.id}))},store:A.model.collectionStore(A.parent_ids)});Ext.ux.MVC.view.HasManyGrid.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.MVC.view.HasManyGrid,Ext.ux.MVC.view.DefaultPagingGridWithTopToolbar);Ext.reg("has_many_grid",Ext.ux.MVC.view.HasManyGrid);Ext.ux.MVC.view.InPlaceHasManyGrid=function(A){var A=A||{};Ext.applyIf(A,{});Ext.ux.MVC.view.InPlaceHasManyGrid.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.MVC.view.InPlaceHasManyGrid,Ext.ux.MVC.view.DefaultPagingGridWithTopToolbar);Ext.reg("in_place_has_many_grid",Ext.ux.MVC.view.InPlaceHasManyGrid);Ext.ux.App.Base=function(A){var A=A||{};this.launch=function(B){this.desktop=this.app.getOS();this.controller.callAction("index")};Ext.applyIf(A,{});Ext.ux.App.Base.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.App.Base,Ext.app.Module);Ext.ux.App.Controller=function(A){var A=A||{};if(!A.viewWindowNamespace){throw new Error("You must provide a viewWindowNamespace to your Controller.  This is used to prepend the ID of every window in this application to enable them to be easily referenced and to not collide with any other applications")}this.viewWindowNamespace=A.viewWindowNamespace;this.viewsPackage=A.viewsPackage;this.app=A.app;this.model=A.model;this.installViews();this.actions=this.actions||{};this.addFilterListeners()};Ext.extend(Ext.ux.App.Controller,Ext.util.Observable,{addFilterListeners:function(){if(this.actions){var A={};for(action in this.actions){A[this.actionEventName(action,"before")]=true;A[this.actionEventName(action,"after")]=true}this.addEvents(A)}},installViews:function(viewsPackage,viewNamespace){var viewsPackage=viewsPackage||this.viewsPackage;this.views=this.views||{};if(viewsPackage){for(view in eval(viewsPackage)){var viewName=view.toLowerCase();if(viewNamespace){viewName=viewNamespace+"_"+viewName}this.views[viewName]=eval(viewsPackage+"."+view)}}},callAction:function(A){var C=this.stripArguments(C);if(!this.actions[A]){var B=this.createDefaultAction(A,C);if(!B){throw new Error("Undefined method "+A)}}if(this.fireEvent(this.actionEventName(A,"before"))){this.actions[A].createDelegate(this,C)()}this.fireEvent(this.actionEventName(A,"after"))},stripArguments:function(B){var A=[];for(var C=1;C<B.length;C++){A.push(B[C])}return A},createDefaultAction:function(B,A){if(!this.actions[B]&&this.viewTemplateExists(B)){var A=A||{};if(A.length==1&&typeof(A[0]=="object")){A=A[0]}this.actions[B]=function(){var E=this.app.desktop;var C=this.namespacedWindowName(B);var D=E.getWindow(C);if(!D){D=E.createWindow(Ext.apply({controller:this,id:C},A),this.views[B])}D.show()};return this.actions[B]}return false},viewTemplateExists:function(view_name){var view=eval(this.viewsPackage+"."+String.capitalize(view_name));return typeof(view)=="function"?true:false},actionEventName:function(B,A){return A+"_"+B},namespacedWindowName:function(C,B){var B=B||{};var A=this.viewWindowNamespace+"-"+C;if(B.id){A+="-"+B.id}return A}});Ext.ux.App.CrudController=function(A){var A=A||{};Ext.applyIf(A,{hasIndexAction:true,hasNewAction:true,hasEditAction:true,hasUpdateAction:true,hasCreateAction:true,hasDestroyAction:true,hasShowAction:true});this.installViews();this.actions=this.actions||{};if(!this.actions.show&&A.hasShowAction){this.actions.show=function(B){return this.callAction("edit",B)}}if(!this.actions.edit&&A.hasEditAction){this.actions.edit=function(E,C){var C=C||{};var G=this.app.desktop;for(var D=E.length-1;D>=0;D--){var B=this.namespacedWindowName("edit",{id:E[D]});var F=G.getWindow(B);Ext.applyIf(C,{controller:this,id:B,object_id:E[D]});if(!F){F=G.createWindow(C,this.views.edit)}F.show()}}}if(!this.actions.update&&A.hasUpdateAction){this.actions.update=function(B){this.model.update(B,{success:function(){Ext.ux.MVC.Flash.flash("Image successfully updated")},failure:function(){Ext.ux.ErrorReporter.showErrors(response.errors)}})}}if(!this.actions.create&&A.hasCreateAction){this.actions.create=function(C){var B=new this.model(C.data);B.save({success:function(){Ext.ux.MVC.Flash.flash("Image successfully created");this.show(B.id)},failure:function(D){Ext.ux.ErrorReporter.showErrors(D.errors)}})}}if(!this.actions.destroy&&A.hasDestroyAction){this.actions.destroy=function(C,B){if(!B){B={}}Ext.each(C,function(D){this.model.destroy(D,B)},this)}}this.addFilterListeners();Ext.ux.App.CrudController.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.App.CrudController,Ext.ux.App.Controller);Ext.ux.App.model=function(A){if(!this.modelName){throw new Error("You must provide an underscored model name (e.g. 'my_class')")}if(!this.fields){throw new Error("You must provide an array of field definitions.  These are passed on exactly to Ext.data.Record")}var A=A||{};Ext.applyIf(this,{dataAdapter:"activeResource"});if(!Ext.ux.App.model.models[this.modelName]){var B=Ext.data.Record.create(this.fields);Ext.apply(B.prototype,Ext.ux.App.model.RecordExtensions)}var C=new B(A);C.init(this);Ext.apply(this,C)};Ext.ux.App.model.RecordExtensions={init:function(A){Ext.applyIf(A,{className:Ext.ux.App.model.classifyName(A.modelName),controllerName:Ext.ux.App.model.controllerName(A.modelName),foreignKeyName:Ext.ux.App.model.foreignKeyName(A.modelName),humanPluralName:Ext.ux.App.model.pluralizeHumanName(A.modelName),humanSingularName:Ext.ux.App.model.singularizeHumanName(A.modelName),underscoreName:A.modelName});if(A.dataAdapter=="activeResource"){Ext.apply(A,Ext.ux.App.model.ActiveResourceAdapter);A.initActiveResource()}Ext.apply(A,Ext.ux.App.model.ValidationExtensions);A.initializeValidationExtensions();Ext.apply(this,A)}};Ext.ux.App.model.ValidationExtensions={initializeValidationExtensions:function(){this.validations=this.validations||[];this.errors=[]},isValid:function(){return false}};Ext.ux.App.model.ActiveResourceAdapter={initActiveResource:function(){Ext.applyIf(this,{urlNamespace:"/admin",urlExtension:".ext_json",urlName:Ext.ux.App.model.urlizeName(this.modelName)})},save:function(A){var A=A||true;console.log("saving model")},destroy:function(A){var A=A||{};console.log("destroying model")},load:function(B,A){var A=A||true;console.log("loading model")},singleDataUrl:function(A){return this.namespacedUrl(String.format("{0}/{1}",this.urlName,this.data.id))},collectionDataUrl:function(){return this.namespacedUrl(this.urlName)},treeUrl:function(){return this.namespacedUrl(String.format("{0}/tree",this.urlName))},treeReorderUrl:function(){return this.namespacedUrl(String.format("{0}/reorder/{1}",this.urlName,this.data.id))},namespacedUrl:function(A){return(String.format("{0}/{1}{2}",this.urlNamespace,A,this.urlExtension))}};Ext.ux.App.model.models=[];Ext.apply(Ext.ux.App.model,{urlizeName:function(A){return A+"s"},classifyName:function(A){return this.singularizeHumanName(A).replace(/ /g,"")},singularizeHumanName:function(A){return A.replace(/_/g," ").titleize()},pluralizeHumanName:function(A){return(A+"s").replace(/_/g," ").titleize()},controllerName:function(A){return this.pluralizeHumanName(A).replace(/ /g,"")+"Controller"},foreignKeyName:function(A){return A+"_id"}});Ext.ux.App.Scaffold=function(A){var A=A||{};if(!A.model){throw new Error("You must provide a model to Ext.ux.App.Scaffold (e.g. Ext.ux.App.MyApp.ModelName).")}if(!A.namespace){throw new Error("You must provide a namespace to Ext.ux.App.Scaffold.  This should be something like Ext.ux.App.MyApp.")}Ext.apply(this,A,{viewWindowNamespace:A.model.model_name,launcherConfig:{},indexViewConfig:{},newViewConfig:{},editViewConfig:{}});Ext.applyIf(this.launcherConfig,{text:this.text,iconCls:this.iconCls});Ext.ux.App.Scaffold.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.App.Scaffold,Ext.ux.App.Base,{viewsPackage:function(B){var A=this.namespace+".view";if(B){A+="."+B}return A},viewExists:function(viewName){if(eval(this.viewsPackage()+"."+viewName)){return true}else{return false}},init:function(){Ext.namespace(this.viewsPackage());this.formFields=this.createFormFields();this.gridColumns=this.createGridFields();this.createIndexView();this.createNewView();this.createEditView();this.createController();this.launcher=Ext.applyIf(this.launcherConfig,{scope:this,handler:this.launch,text:"Scaffold Application"})},createFormFields:function(){if(this.viewExists("FormFields")){return eval(this.viewsPackage("FormFields"))}var formFields=[];for(var i=0;i<this.model.fields.length;i++){var field=this.model.fields[i];if(field.name=="id"){continue}var formField={fieldLabel:String.capitalize(field.name),name:this.model.model_name+"["+field.name+"]"};formFields.push(formField)}this.formFields=formFields;fieldsFunction=function(){return formFields};eval(this.viewsPackage("FormFields")+" = fieldsFunction");return formFields},createGridFields:function(){if(this.viewExists("GridColumns")){return eval(this.viewsPackage("GridColumns"))}var gridColumns=[];for(var i=0;i<this.model.fields.length;i++){var field=this.model.fields[i];if(field.name=="id"){continue}var gridColumn={header:String.capitalize(field.name),dataIndex:field.name,type:field.type};gridColumns.push(gridColumn)}fieldsFunction=function(){return formFields};eval(this.viewsPackage("GridColumns")+" = fieldsFunction");return gridColumns},createIndexView:function(){if(!this.viewExists("Index")){var gridConfig=Ext.apply(this.indexViewConfig,{title:this.text,iconCls:this.iconCls,gridConfig:{model:this.model,columns:this.gridColumns}});var tempView=function(config){var config=config||{};Ext.applyIf(config,gridConfig);tempView.superclass.constructor.call(this,config)};Ext.extend(tempView,Ext.ux.App.view.DefaultGridWindow);eval(this.viewsPackage("Index")+" = tempView;")}},createNewView:function(){if(!this.viewExists("New")){this.createFormView("New",this.newViewConfig)}},createEditView:function(){if(!this.viewExists("Edit")){this.createFormView("Edit",this.editViewConfig)}},createFormView:function(formName,formConfig){var formConfig=formConfig||{};Ext.apply(formConfig,{model:this.model,iconCls:this.iconCls,formConfig:{items:this.formFields}});var tempView=function(config){var config=config||{};Ext.applyIf(config,formConfig);tempView.superclass.constructor.call(this,config)};eval("Ext.extend(tempView, Ext.ux.App.view.Default"+formName+"Window);");eval(this.viewsPackage(formName)+" = tempView;")},createController:function(){if(!this.controller){this.controller=new Ext.ux.App.CrudController({model:this.model,app:this,viewsPackage:this.viewsPackage(),viewWindowNamespace:this.viewWindowNamespace})}}});Ext.ux.App.model.Validation=function(A,C,B){var B=B||{};this.record=A;this.fieldName=C;Ext.applyIf(B,{isValid:function(){return true},getValue:function(){return this.record.data[this.fieldName]}});Ext.apply(this,B,{init:Ext.emptyFn});this.init()};Ext.ux.App.model.PresenceValidation=function(A,C,B){var B=B||{};Ext.applyIf(B,{message:"must be present",isValid:function(){var D=this.getValue();if(typeof(D)=="undefined"){return false}else{return(D.length>=0)}}});Ext.ux.App.model.PresenceValidation.superclass.constructor.call(this,A,C,B)};Ext.extend(Ext.ux.App.model.PresenceValidation,Ext.ux.App.model.Validation);Ext.ux.App.model.LengthValidation=function(A,C,B){var B=B||{};Ext.applyIf(B,{message:"is not an acceptable length",isValid:function(){var D=this.getValue()||"";if(B.min&&D.length<B.min){this.message="is too short (minimum length is 5)";return false}if(B.max&&D.length>B.max){this.message="is too long (maximum length is 10)";return false}return true}});Ext.ux.App.model.LengthValidation.superclass.constructor.call(this,A,C,B)};Ext.extend(Ext.ux.App.model.LengthValidation,Ext.ux.App.model.Validation);Ext.ux.App.model.NumericalityValidation=function(A,C,B){var B=B||{};Ext.applyIf(B,{message:"must be a number",isValid:function(){return(typeof(this.getValue())=="number")}});Ext.ux.App.model.NumericalityValidation.superclass.constructor.call(this,A,C,B)};Ext.extend(Ext.ux.App.model.NumericalityValidation,Ext.ux.App.model.Validation);Ext.ux.App.model.InclusionValidation=function(A,D,C,B){var B=B||{};if(!C){throw new Error("You must provide an array of values to an Inclusion Validation")}this.includeValues=C;Ext.applyIf(B,{message:"must be one of ",isValid:function(){var E=this.getValue();return this.includeValues.any(function(F){return F==E})},setMessage:function(){if(this.includeValues.length<5){this.message+=this.includeValues.toSentence("or")}else{this.message+="the acceptable values"}},init:function(){this.setMessage()}});Ext.ux.App.model.InclusionValidation.superclass.constructor.call(this,A,D,B)};Ext.extend(Ext.ux.App.model.InclusionValidation,Ext.ux.App.model.Validation);Ext.ux.App.model.ExclusionValidation=function(B,D,A,C){var C=C||{};if(!A){throw new Error("You must provide an array of values to an Exclusion Validation")}this.excludeValues=A;Ext.applyIf(C,{message:"must not be one of ",isValid:function(){var E=this.getValue();return !this.excludeValues.any(function(F){return F==E})},setMessage:function(){if(this.excludeValues.length<5){this.message+=this.excludeValues.toSentence("or")}else{this.message+="the unacceptable values"}},init:function(){this.setMessage()}});Ext.ux.App.model.ExclusionValidation.superclass.constructor.call(this,B,D,C)};Ext.extend(Ext.ux.App.model.ExclusionValidation,Ext.ux.App.model.Validation);Ext.ux.App.model.FormatValidation=function(A,D,C,B){var B=B||{};if(!C){throw new Error("You must pass a regular expression object or string to a Format Validation")}this.regExp=C;Ext.applyIf(B,{message:"is not in the correct format",isValid:function(){return this.regExp.test(this.getValue())},init:function(){if(typeof(this.regExp)=="string"){this.regExp=new RegExp(this.regExp)}if(!this.validRegExp(this.regExp)){throw new Error("Invalid RegExp in Format Validation")}this.setMessage()},setMessage:Ext.emptyFn,validRegExp:function(E){return typeof(E.test)=="function"}});Ext.ux.App.model.FormatValidation.superclass.constructor.call(this,A,D,B)};Ext.extend(Ext.ux.App.model.FormatValidation,Ext.ux.App.model.Validation);Ext.ux.App.view.HABTMTree=function(A){var A=A||{};if(!A.model){throw new Error("You must provide a model to HABTMTree")}if(!A.habtmModel){throw new Error("You must provide a category model to HABTMTree")}this.model=A.model;this.habtmModel=A.habtmModel;this.objectId=A.objectId;this.hiddenField=new Ext.form.Hidden({name:this.model.model_name+"["+this.habtmModel.foreign_key_name+"s]"});Ext.applyIf(A,{loaderUrl:this.defaultLoaderUrl(),autoScroll:true,treeConfig:{}});this.tree=new Ext.tree.TreePanel(Ext.applyIf(A.treeConfig,{rootVisible:false,autoScroll:true,containerScroll:true,loader:new Ext.tree.TreeLoader({dataUrl:A.loaderUrl,listeners:{load:{fn:this.populateIds,scope:this}}})}));this.treeRoot=new Ext.tree.AsyncTreeNode({text:"root",draggable:false,id:"source"});this.tree.setRootNode(this.treeRoot);Ext.applyIf(A,{title:"This "+this.model.human_singular_name+"'s Categories",height:315,layout:"form",items:[this.tree,this.hiddenField],bodyStyle:"background-color: #fff; border: 1px solid #99BBE8; padding: 5px;"});Ext.ux.App.view.HABTMTree.superclass.constructor.call(this,A);this.treeRoot.expand(false,false,function(){});this.tree.on("checkchange",this.onCheckChange,this)};Ext.extend(Ext.ux.App.view.HABTMTree,Ext.Panel,{populateIds:function(){var A=this.tree.getChecked();var C=[];for(var B=A.length-1;B>=0;B--){C.push(A[B].id)}this.hiddenField.setValue(C.join(","))},onCheckChange:function(B,A){if(A){B.bubble(function(C){this.tree.suspendEvents();if(B!=C&&C.ui.isChecked()==false){C.ui.toggleCheck()}this.tree.resumeEvents()},this)}else{B.cascade(function(C){this.tree.suspendEvents();if(B!=C&&C.ui.isChecked()==true){C.ui.toggleCheck()}this.tree.resumeEvents()},this)}this.populateIds()},defaultLoaderUrl:function(){throw new Error("You must implement defaultLoaderUrl()")}});Ext.reg("habtm_tree",Ext.ux.App.view.HABTMTree);Ext.ux.App.view.ImageAssociator=function(A){var A=A||{};A.dataViewConfig=A.dataViewConfig||{};A.imageAssociationConfig=A.imageAssociationConfig||{};if(!A.model){throw new Error("You must provide a model to Ext.ux.App.view.ImageAssociator")}if(!A.imageModel){throw new Error("You must provide an Image model to Ext.ux.App.view.ImageAssociator")}if(!A.objectId){throw new Error("You must provide an object id to Ext.ux.App.view.ImageAssociator")}this.model=A.model;this.imageModel=A.imageModel;this.objectId=A.objectId;Ext.applyIf(A.imageAssociationConfig,{baseUrl:"/admin/image_associations"});Ext.applyIf(A.imageAssociationConfig,{url:A.imageAssociationConfig.baseUrl+"?id="+this.objectId+"&type="+this.model.class_name,reader:this.imageAssociationReader,autoLoad:true});this.store=new Ext.data.Store(A.imageAssociationConfig);this.addButton=new Ext.Button({text:"Add an Image",iconCls:"add",scope:this,handler:this.addAction});this.removeButton=new Ext.Button({text:"Remove Selected",iconCls:"cancel",scope:this,handler:this.removeAction,disabled:true});this.template=new Ext.XTemplate('<tpl for=".">','<div class="thumb-wrap" id="image-{id}">','<div class="thumb"><img src="{thumb_filename}" class="thumb-img"></div>',"<span>{title}</span></div>","</tpl>");Ext.applyIf(A.dataViewConfig,{itemSelector:"div.thumb-wrap",style:"overflow: auto; background-color: #fff;",overClass:"x-view-over",emptyText:'<p style="padding: 10px">No images to display - drag images here to attach images</p>',singleSelect:true,multiSelect:false,store:this.store,tpl:this.template});this.view=new Ext.DataView(A.dataViewConfig);this.tbar=new Ext.Toolbar({items:[this.addButton,"-",this.removeButton]});Ext.applyIf(A,{title:"Images attached to this "+this.model.human_singular_name,height:315,tbar:this.tbar,items:[this.view],layout:"fit",autoScroll:true,bodyStyle:"border: 1px solid #99BBE8;"});Ext.ux.App.view.ImageAssociator.superclass.constructor.call(this,A);this.addEvents({beforeremove:true,remove:true,removefailed:true,beforeassociate:true,associate:true,associatefailed:true});this.view.on("render",this.initializeDropZone,this);this.on("remove",function(){this.store.reload()},this);this.on("associate",function(){this.store.reload()},this);this.view.on("selectionchange",this.updateRemoveButtonStatus,this)};Ext.extend(Ext.ux.App.view.ImageAssociator,Ext.Panel,{imageAssociationReader:new Ext.data.JsonReader({root:"image_associations",totalProperty:"results"},[{name:"id",type:"int"},{name:"image_id",type:"int"},{name:"image_linked_model_id",type:"int"},{name:"image_linked_model_type",type:"string"},{name:"created_at",type:"string"},{name:"updated_at",type:"string"},{name:"thumb_filename",type:"string",mapping:"image.thumb_filename"},{name:"title",type:"string",mapping:"image.title"},{name:"filename",type:"string",mapping:"image.filename"},{name:"image"}]),addAction:function(){Ext.Msg.alert("Use Image Browser","Please open up the image browser and drag any images you required into this view")},removeAction:function(){var B=this.currentImageAssociation();if(!B){return}var A=this.initialConfig.imageAssociationConfig.baseUrl+"/"+B.data.id+".ext_json";if(this.fireEvent("beforeremove")){Ext.Ajax.request({method:"post",url:A,scope:this,params:"_method=delete",success:function(C,D){this.fireEvent("remove",C,D)},failure:function(C,D){this.fireEvent("removefailed",C,D)}})}},updateRemoveButtonStatus:function(A,B){A.getSelectionCount()>0?this.removeButton.enable():this.removeButton.disable()},currentImageAssociation:function(){var A=this.view.getSelectedRecords()[0];if(A){return A}},initializeDropZone:function(){this.dropZone=new Ext.dd.DropZone(this.view.getEl(),{dataView:this,notifyOver:function(C,B,A){if(this.canDropOnLocation(C,B,A)){return Ext.dd.DropZone.prototype.dropAllowed}else{return Ext.dd.DropZone.prototype.dropNotAllowed}},notifyDrop:function(C,B,A){B.stopEvent();if(this.canDropOnLocation(C,B,A)){this.dataView.associateImage(A.imageData.id);return true}else{return false}},canDropOnLocation:function(C,B,A){boo=B;if(B.getTarget(".x-desktop")){return false}return A.imageData&&A.imageData.id;if(B.getTarget(".x-window")){return false}if(B.getTarget(".x-shortcut")){return false}if(B.getTarget("td.shortcut-position")&&this.hasValidShortcutConfig(A)){return true}else{return false}}})},associateImage:function(B){if(this.fireEvent("beforeassociate")){var A="&image_association[image_id]="+B;A+="&image_association[image_linked_model_type]="+this.model.class_name;A+="&image_association[image_linked_model_id]="+this.objectId;Ext.Ajax.request({scope:this,method:"post",url:"/admin/image_associations",params:A,success:function(){this.fireEvent("associate")},failure:function(){this.fireEvent("associatefailed")}})}}});Ext.reg("image_associator",Ext.ux.App.view.ImageAssociator);Ext.ux.App.TinyMceMethods={mceConfig:{mode:"specific_textareas",editor_selector:"mceEditor",theme:"advanced",content_css:"/stylesheets/pages.css",body_class:"content",skin:"o2k7",width:"98%",height:400,plugins:"safari,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,pagebreak",theme_advanced_buttons1:"bold,italic,underline,separator,justifyleft,justifycenter,justifyright,justifyfull,separator,formatselect,fontselect,fontsizeselect,forecolor,styleprops",theme_advanced_buttons2:"cut,copy,paste,pastetext,pasteword,separator,search,replace,separator,bullist,numlist,separator,outdent,indent,separator,undo,redo,separator,anchor,link,unlink,separator,image,code,fullscreen",theme_advanced_buttons3:"",verify_html:false,theme_advanced_toolbar_location:"top",theme_advanced_toolbar_align:"left",theme_advanced_disable:"hr,sub,sup,charmap,removeformat,visualaid",external_link_list_url:"example_data/example_link_list.js",external_image_list_url:"example_data/example_image_list.js",template_external_list_url:"example_data/example_template_list.js",file_browser_callback:"GoSpin.fileBrowser",theme_advanced_resize_horizontal:false,apply_source_formatting:true,relative_urls:false},initTinyMce:function(){tinyMCE.init(this.mceConfig)},findTinyMceTextAreas:function(){var B=this.form.items.items;var D=[];for(var C=B.length-1;C>=0;C--){var A=B[C].initialConfig;if(A.xtype=="textarea"&&A.cls=="mceEditor"){D.push(B[C])}}return D},removeTinyMceTextAreas:function(){var C=this.findTinyMceTextAreas();for(var A=C.length-1;A>=0;A--){var B=tinyMCE.get(C[A].id);if(B){tinyMCE.remove(B)}}}};Ext.ux.App.view.DefaultCrudGrid=function(A){var A=A||{};if(A.model==null){throw new Error("Error - no Model supplied to DefaultCrudGrid")}if(A.controller==null){throw new Error("Error - no Controller supplied to DefaultCrudGrid")}this.model=A.model;this.controller=A.controller;this.selectionModel=new Ext.grid.CheckboxSelectionModel();this.columnModel=new Ext.grid.ColumnModel([this.selectionModel].concat(A.columns));this.columnModel.defaultSortable=true;this.columnModel.defaultWidth=160;Ext.applyIf(A,{hasTopToolbar:true,hasPagingToolbar:true,topToolbarConfig:{},clicksToEdit:1,loadMask:true,viewConfig:{forceFit:true},tbar:null,autoLoadStore:true,id:this.model.url_name+"_grid",store:this.model.collectionStore(),sm:this.selectionModel,cm:this.columnModel});this.store=A.store;Ext.applyIf(A.topToolbarConfig,{addButtonHandler:this.addHandler,editButtonHandler:this.editHandler,deleteButtonHandler:this.deleteHandler,addButtonConfig:{scope:this},editButtonConfig:{scope:this},deleteButtonConfig:{scope:this},model:this.model,controller:A.controller});if(A.hasPagingToolbar){A.bbar=new Ext.ux.MVC.DefaultPagingToolbar({store:A.store,model:this.model});A.plugins=[A.bbar]}if(A.hasTopToolbar){this.tbar=new Ext.ux.MVC.DefaultGridTopToolbar(A.topToolbarConfig);A.tbar=this.tbar;this.tbar.on("render",this.tbar.setupHandlers,this)}try{var C=Ext.state.Manager.getProvider().get(A.id).start||0}catch(B){var C=0}if(A.autoLoadStore){this.store.load({params:{start:C,limit:25}})}Ext.ux.App.view.DefaultCrudGrid.superclass.constructor.call(this,A);this.on("rowcontextmenu",this.showContextMenu,this);this.on("rowdblclick",this.editHandler,this);if(A.hasTopToolbar){this.on("render",function(){this.createGridContextMenu()},this)}};Ext.extend(Ext.ux.App.view.DefaultCrudGrid,Ext.grid.GridPanel,{firstPage:function(){var A=this.store;A.load({params:{start:0,limit:A.lastOptions.params.limit}})},previousPage:function(){return this.nextOrPreviousPage(this.store,"Down")},nextPage:function(){return this.nextOrPreviousPage(this.store,"UP")},lastPage:function(){var B=this.store;var A=B.lastOptions.params.limit;var C=Math.floor((B.totalLength-1)/A)*A;this.store.load({params:{start:C,limit:A}})},refresh:function(){this.store.reload()},showContextMenu:function(A,C,B){B.stopEvent();this.getSelectionModel().selectRow(C,true);if(!this.contextMenu.el){this.contextMenu.render()}this.contextMenu.showAt(B.getXY())},createGridContextMenu:function(){this.contextMenu=new Ext.ux.MVC.view.DefaultGridContextMenu({model:this.model,grid:this,scope:this,addHandler:this.addHandler,editHandler:this.editHandler,deleteHandler:this.deleteHandler});return this.contextMenu},nextOrPreviousPage:function(A,C){var B=A.lastOptions.params;if(C=="UP"){if(B.start+B.limit<A.totalLength){B.start=B.start+B.limit}}else{if(B.start-B.limit>=0){B.start=B.start-B.limit}}A.load({params:B})},addHandler:function(){this.controller.callAction("new")},editHandler:function(){var A=this.getSelectedRecordIds();this.controller.callAction("edit",A)},deleteHandler:function(){var A=this.getSelectedRecordIds();this.controller.callAction("destroy",A)},getSelectedRecordIds:function(){var B=[];var A=this.getSelectionModel().getSelections();Ext.each(A,function(C){B.push(C.data.id)});return B}});Ext.reg("default_crud_grid",Ext.ux.App.view.DefaultCrudGrid);Ext.ux.App.view.DefaultCrudFormWindow=function(A){var A=A||{};if(!A.model){throw new Error("You must supply a model to a default form window")}var B=A.model.human_singular_name;Ext.applyIf(A,{iconCls:A.model.model_name,height:480,width:640,minHeight:240,minWidth:320,layout:"fit",collapsible:false,url:A.model.collectionDataUrl(),formConfig:{},hasSaveButton:true,hasCancelButton:true,saveButtonConfig:{},cancelButtonConfig:{},cancelButtonHandler:function(){if(this.fireEvent("beforecancel")){this.close();this.fireEvent("cancel")}}});Ext.applyIf(A.formConfig,{defaults:{anchor:"-20",xtype:"textfield"},autoScroll:true,cls:"x-panel-mc"});this.form=new Ext.form.FormPanel(A.formConfig);if(A.hasSaveButton){this.saveButton=new Ext.Button(Ext.applyIf(A.saveButtonConfig,{text:"Save",iconCls:"save",scope:this,handler:A.saveButtonHandler,tooltip:"Saves this "+B+" (keyboard shortcut: CTRL + s)"}));this.form.addButton(this.saveButton)}if(A.hasCancelButton){this.cancelButton=new Ext.Button(Ext.applyIf(A.cancelButtonConfig,{text:"Cancel",iconCls:"cancel",scope:this,handler:A.cancelButtonHandler,tooltip:"Cancel save"}));this.form.addButton(this.cancelButton)}if(A.helpConfig){this.helpPanel=new Ext.Panel(Ext.applyIf(A.helpConfig,{region:"west",split:false,width:200,cls:"x-panel-help",bodyStyle:"padding: 10px; font-size: 12px;"}));this.form.region="center";var C=new Ext.Panel({layout:"border",items:[this.form,this.helpPanel]});A.items=[C]}else{A.items=[this.form]}Ext.ux.App.view.DefaultCrudFormWindow.superclass.constructor.call(this,A);this.addEvents({beforesave:true,save:true,savefailed:true,beforecancel:true,cancel:true})};Ext.extend(Ext.ux.App.view.DefaultCrudFormWindow,Ext.Window);Ext.ux.App.view.DefaultEditWindow=function(B){var B=B||{};var C=B.model.human_singular_name;Ext.applyIf(B,{id:"edit_"+B.model.model_name+"_window",title:"Edit "+B.model.human_singular_name,autoLoadForm:true,url:B.model.singleDataUrl(B.object_id),formConfig:{},saveButtonHandler:function(){if(this.fireEvent("beforesave")){this.form.form.submit({url:B.url,waitMsg:"Saving Data...",scope:this,failure:function(){Ext.Msg.alert("Operation Failed","There were errors saving this "+C+", please see any fields with red icons")},success:function(D,E){Ext.ux.MVC.NotificationManager.inform("The "+C+" was updated successfully");if(this.fireEvent("save")){this.close()}}})}},cancelButtonHandler:function(){if(this.fireEvent("beforecancel")){this.close();this.fireEvent("cancel")}}});Ext.applyIf(B.formConfig,{addPutMethodField:true});this.addEvents({formloaded:true,formloadfailed:true});if(B.formConfig.addPutMethodField){var A={xtype:"hidden",name:"_method",value:"put"};B.formConfig.items=[A].concat(B.formConfig.items)}Ext.ux.App.view.DefaultEditWindow.superclass.constructor.call(this,B);this.loadForm=function(){this.form.load({url:B.model.singleDataUrl(B.object_id),method:"get",scope:this,success:function(){this.fireEvent("formloaded")},failure:function(){this.fireEvent("formloadfailed")}})};if(B.autoLoadForm){this.loadForm()}};Ext.extend(Ext.ux.App.view.DefaultEditWindow,Ext.ux.App.view.DefaultCrudFormWindow);Ext.reg("default_edit_window",Ext.ux.App.view.DefaultEditWindow);Ext.ux.App.view.DefaultEditWindowWithTinyMce=function(A){var A=A||{};Ext.ux.App.view.DefaultEditWindowWithTinyMce.superclass.constructor.call(this,A);this.on("formloaded",this.initTinyMce);this.on("beforesave",function(){tinyMCE.triggerSave()});this.on("beforedestroy",this.removeTinyMceTextAreas)};Ext.extend(Ext.ux.App.view.DefaultEditWindowWithTinyMce,Ext.ux.App.view.DefaultEditWindow,Ext.ux.App.TinyMceMethods);Ext.reg("default_edit_window_with_tiny_mce",Ext.ux.App.view.DefaultEditWindowWithTinyMce);Ext.ux.MVC.view.DefaultGridContextMenu=function(A){var A=A||{};if(!A.model){throw new Error("You must provide a model to DefaultGridContextMenu")}if(!A.grid){throw new Error("You must provide a grid to DefaultGridContextMenu")}Ext.applyIf(A,{hasEditMenuItem:true,hasAddMenuItem:true,hasDeleteMenuItem:true,items:[]});this.singular=A.model.human_singular_name;this.plural=A.model.human_plural_name;if(A.hasEditMenuItem){this.editMenuItem=new Ext.menu.Item({iconCls:"edit",handler:A.editHandler,scope:A.scope,text:"Edit selected "+this.singular});A.items.push(this.editMenuItem)}if(A.hasDeleteMenuItem){this.deleteMenuItem=new Ext.menu.Item({iconCls:"delete",handler:A.editHandler,scope:A.scope,text:"Delete selected "+this.singular});A.items.push(this.deleteMenuItem)}if(A.hasAddMenuItem){this.addMenuItem=new Ext.menu.Item({iconCls:"add",handler:A.editHandler,scope:A.scope,text:"Add a new "+this.singular});A.items.push(this.addMenuItem)}Ext.ux.MVC.view.DefaultGridContextMenu.superclass.constructor.call(this,A);this.on("beforeshow",this.updateItemText,this)};Ext.extend(Ext.ux.MVC.view.DefaultGridContextMenu,Ext.menu.Menu,{updateItemText:function(){this.updateEditItemText();this.updateDeleteItemText()},updateEditItemText:function(){if(this.editMenuItem){this.editMenuItem.setText(this.singularOrPlural("Edit"))}},updateDeleteItemText:function(){if(this.deleteMenuItem){this.deleteMenuItem.setText(this.singularOrPlural("Delete"))}},singularOrPlural:function(A){if(this.grid.getSelectionModel().getCount()==1){return A+" selected "+this.singular}else{return A+" selected "+this.plural}}});Ext.reg("default_grid_context_menu",Ext.ux.MVC.view.DefaultGridContextMenu);Ext.ux.App.view.DefaultGridWindow=function(A){var A=A||{};Ext.applyIf(A,{title:"Paging Grid",iconCls:"grid_list",layout:"fit",height:480,width:640,minHeight:240,minWidth:320,shim:false,tools:[],keys:[{key:"a",scope:this,handler:this.addHandler},{key:"e",scope:this,handler:this.editHandler},{key:"d",scope:this,handler:this.deleteHandler},{key:"f",scope:this,handler:this.firstPage},{key:"p",scope:this,handler:this.previousPage},{key:"n",scope:this,handler:this.nextPage},{key:"l",scope:this,handler:this.lastPage},{key:"r",scope:this,handler:this.refresh}],hasTopToolbar:true,hasPagingToolbar:true,gridConfig:{},topToolbarConfig:{}});Ext.applyIf(A,{id:"index_"+A.gridConfig.model.model_name+"_window"});if(A.hasHelpTool){A.tools.push({id:"help",scope:this,handler:function(){this.controller.callAction("help")}})}if(A.gridConfig.model==null){alert("Error - no Model supplied to DefaultGridWindow");return false}this.model=A.gridConfig.model;this.selectionModel=new Ext.grid.CheckboxSelectionModel();this.columnModel=new Ext.grid.ColumnModel([this.selectionModel].concat(A.gridConfig.columns));this.columnModel.defaultSortable=true;this.columnModel.defaultWidth=160;Ext.applyIf(A.gridConfig,{clicksToEdit:1,loadMask:true,viewConfig:{forceFit:true},tbar:null,autoLoadStore:true,id:this.model.url_name+"_grid",store:this.model.collectionStore(),sm:this.selectionModel,cm:this.columnModel});Ext.applyIf(A.topToolbarConfig,{addButtonHandler:this.addHandler,editButtonHandler:this.editHandler,deleteButtonHandler:this.deleteHandler,addButtonConfig:{scope:this},editButtonConfig:{scope:this},deleteButtonConfig:{scope:this},model:this.model,controller:A.controller});if(A.hasPagingToolbar){A.gridConfig.bbar=new Ext.ux.MVC.DefaultPagingToolbar({store:A.gridConfig.store,model:this.model});A.gridConfig.plugins=[A.gridConfig.bbar]}if(A.hasTopToolbar){this.tbar=new Ext.ux.MVC.DefaultGridTopToolbar(A.topToolbarConfig);A.gridConfig.tbar=this.tbar}this.grid=new Ext.grid.GridPanel(A.gridConfig);if(A.hasTopToolbar){this.grid.on("render",this.tbar.setupHandlers,this.tbar)}Ext.apply(A,{items:this.grid});Ext.ux.App.view.DefaultGridWindow.superclass.constructor.call(this,A);try{var C=Ext.state.Manager.getProvider().get(A.gridConfig.id).start||0}catch(B){var C=0}if(A.gridConfig.autoLoadStore){this.grid.store.load({params:{start:C,limit:25}})}this.grid.on("rowcontextmenu",this.showContextMenu,this);this.grid.on("rowdblclick",this.editHandler,this);this.on("render",this.createGridContextMenu)};Ext.extend(Ext.ux.App.view.DefaultGridWindow,Ext.Window,{firstPage:function(){var A=this.grid.store;A.load({params:{start:0,limit:A.lastOptions.params.limit}})},previousPage:function(){return this.nextOrPreviousPage(this.grid.store,"Down")},nextPage:function(){return this.nextOrPreviousPage(this.grid.store,"UP")},lastPage:function(){var B=this.grid.store;var A=B.lastOptions.params.limit;var C=Math.floor((B.totalLength-1)/A)*A;this.grid.store.load({params:{start:C,limit:A}})},refresh:function(){this.grid.store.reload()},showContextMenu:function(A,C,B){B.stopEvent();A.getSelectionModel().selectRow(C,true);if(!this.contextMenu.el){this.contextMenu.render()}this.contextMenu.showAt(B.getXY())},createGridContextMenu:function(){this.contextMenu=new Ext.ux.MVC.view.DefaultGridContextMenu({model:this.model,grid:this,scope:this,addHandler:this.addHandler,editHandler:this.editHandler,deleteHandler:this.deleteHandler});return this.contextMenu},nextOrPreviousPage:function(A,C){var B=A.lastOptions.params;if(C=="UP"){if(B.start+B.limit<A.totalLength){B.start=B.start+B.limit}}else{if(B.start-B.limit>=0){B.start=B.start-B.limit}}A.load({params:B})},addHandler:function(){var A={listeners:{close:{fn:function(){this.grid.store.reload()},scope:this}}};this.controller.callAction("new",A)},editHandler:function(){var B=this.getSelectedRecordIds();var A={listeners:{close:{fn:function(){this.grid.store.reload()},scope:this}}};this.controller.callAction("edit",B,A)},deleteHandler:function(B){var C=this.getSelectedRecordIds();var B=B||{};var A=this.model.human_singular_name+" successfully deleted";Ext.applyIf(B,{success:function(){Ext.ux.MVC.NotificationManager.inform(A);this.grid.store.reload()},scope:this});Ext.Msg.confirm("Delete "+this.model.human_singular_name,"Really delete this "+this.model.human_singular_name+"? This cannot be undone.",function(D){if(D=="yes"){this.controller.callAction("destroy",C,B)}},this)},getSelectedRecordIds:function(){var B=[];var A=this.grid.getSelectionModel().getSelections();Ext.each(A,function(C){B.push(C.data.id)});return B}});Ext.reg("default_grid_window",Ext.ux.App.view.DefaultGridWindow);Ext.ux.App.view.DefaultNewWindow=function(A){var A=A||{};var B=A.model.human_singular_name;Ext.applyIf(A,{id:"new_"+A.model.model_name+"_window",title:"New "+A.model.human_singular_name,saveButtonHandler:function(){if(this.fireEvent("beforesave")){this.form.form.submit({url:A.url,waitMsg:"Saving Data...",scope:this,failure:function(){if(!this.fireEvent("savefailed")){Ext.Msg.alert("Operation Failed","There were errors saving this "+B+", please see any fields with red icons")}},success:function(C,D){Ext.ux.MVC.NotificationManager.inform("The "+B+" was created successfully");if(this.fireEvent("save")){this.close()}}})}}});Ext.ux.App.view.DefaultNewWindow.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.App.view.DefaultNewWindow,Ext.ux.App.view.DefaultCrudFormWindow);Ext.reg("default_new_window",Ext.ux.App.view.DefaultNewWindow);Ext.ux.App.view.DefaultNewWindowWithTinyMce=function(A){var A=A||{};Ext.ux.App.view.DefaultNewWindowWithTinyMce.superclass.constructor.call(this,A);this.on("show",this.initTinyMce);this.on("beforesave",function(){tinyMCE.triggerSave()});this.on("beforedestroy",this.removeTinyMceTextAreas)};Ext.extend(Ext.ux.App.view.DefaultNewWindowWithTinyMce,Ext.ux.App.view.DefaultNewWindow,Ext.ux.App.TinyMceMethods);Ext.reg("default_new_window_with_tiny_mce",Ext.ux.App.view.DefaultNewWindowWithTinyMce);Ext.ux.App.view.GenericHelpWindow=function(A){var A=A||{};this.keyboardShortcuts=Ext.applyIf(A,{width:500,height:400,iconCls:"help",cls:"x-window-help",shim:false,collapsible:true,bodyStyle:"padding: 10px",autoScroll:true});Ext.ux.App.view.GenericHelpWindow.superclass.constructor.call(this,A)};Ext.extend(Ext.ux.App.view.GenericHelpWindow,Ext.Window);Ext.reg("user_manager_help",Ext.ux.App.view.GenericHelpWindow);Ext.ux.App.view.GenericHelpWindow.keyboardShortcuts=function(B){var C=B.human_singular_name;var A=B.human_plural_name;return[{tag:"h1",html:"Keyboard shortcuts"},{tag:"p",html:"For your convenience, several keyboard shortcuts have been added to this application:"},{tag:"dl",cls:"shortcuts",children:[{tag:"dt",html:"f:"},{tag:"dd",html:"Navigate to the first page of "+A},{tag:"dt",html:"p:"},{tag:"dd",html:"Navigate to the previous page of "+A},{tag:"dt",html:"n:"},{tag:"dd",html:"Navigate to the next page of "+A},{tag:"dt",html:"l:"},{tag:"dd",html:"Navigate to the last page of "+A},{tag:"dt",html:"r:"},{tag:"dd",html:"Refresh the current view"},{tag:"dt",html:"a:"},{tag:"dd",html:"Open the Add "+C+" window"},{tag:"dt",html:"e:"},{tag:"dd",html:"Edit all currently selected "+A},{tag:"dt",html:"d:"},{tag:"dd",html:"Delete all currently selected "+A}]},{tag:"p",html:"Most buttons in each application have keyboard shortcuts.  Try hovering over a button briefly with the mouse - if it has a shortcut button a tooltip will appear telling you what it is"}]};